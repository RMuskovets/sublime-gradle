# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Gradle
scopeName: source.gradle
fileTypes: ["gradle"]
uuid: b5741d4f-485d-4bca-9a5b-6a1ec2a5a272

patterns:
  - include: '#auto-generated-tasks'
  - include: '#project-patterns'
  - include: source.groovy

repository:
  project-patterns:
    patterns:
      - name: support.function.project.allprojects.gradle
        match: allprojects
      - name: support.function.project.ant.gradle
        match: ant
      - name: support.function.project.artifacts.gradle
        match: artifacts
      - name: support.function.project.buildDir.gradle
        match: buildDir
      - name: support.function.project.buildFile.gradle
        match: buildFile
      - name: support.function.project.buildscript.gradle
        match: buildscript
      - name: support.function.project.childProjects.gradle
        match: childProjects
      - name: support.function.project.configurations.gradle
        match: configurations
      - name: support.function.project.convention.gradle
        match: convention
      - name: support.function.project.defaultTasks.gradle
        match: defaultTasks
      - name: support.function.project.dependencies.gradle
        match: dependencies
      - name: support.function.project.dependsOnProjects.gradle
        match: dependsOnProjects
      - name: support.function.project.description.gradle
        match: description
      - name: support.function.project.extensions.gradle
        match: extensions
      - name: support.function.project.gradle.gradle
        match: gradle
      - name: support.function.project.group.gradle
        match: group
      - name: support.function.project.logger.gradle
        match: logger
      - name: support.function.project.logging.gradle
        match: logging
      - name: support.function.project.name.gradle
        match: name
      - name: support.function.project.parent.gradle
        match: parent
      - name: support.function.project.path.gradle
        match: path
      - name: support.function.project.plugins.gradle
        match: plugins
      - name: support.function.project.project.gradle
        match: project
      - name: support.function.project.projectDir.gradle
        match: projectDir
      - name: support.function.project.properties.gradle
        match: properties
      - name: support.function.project.repositories.gradle
        match: repositories
      - name: support.function.project.resources.gradle
        match: resources
      - name: support.function.project.rootDir.gradle
        match: rootDir
      - name: support.function.project.rootProject.gradle
        match: rootProject
      - name: support.function.project.state.gradle
        match: state
      - name: support.function.project.status.gradle
        match: status
      - name: support.function.project.subprojects.gradle
        match: subprojects
      - name: support.function.project.tasks.gradle
        match: tasks
      - name: support.function.project.version.gradle
        match: version
      - name: support.function.project.binaries.gradle
        match: binaries
      - name: support.function.project.sources.gradle
        match: sources
      - name: support.function.project.announce.gradle
        match: announce
      - name: support.function.project.applicationDefaultJvmArgs.gradle
        match: applicationDefaultJvmArgs
      - name: support.function.project.applicationDistribution.gradle
        match: applicationDistribution
      - name: support.function.project.applicationName.gradle
        match: applicationName
      - name: support.function.project.mainClassName.gradle
        match: mainClassName
      - name: support.function.project.checkstyle.gradle
        match: checkstyle
      - name: support.function.project.checkstyleConfigFile.gradle
        match: checkstyleConfigFile
      - name: support.function.project.checkstyleConfigFileName.gradle
        match: checkstyleConfigFileName
      - name: support.function.project.checkstyleProperties.gradle
        match: checkstyleProperties
      - name: support.function.project.checkstyleResultsDir.gradle
        match: checkstyleResultsDir
      - name: support.function.project.checkstyleResultsDirName.gradle
        match: checkstyleResultsDirName
      - name: support.function.project.codeNarcConfigFile.gradle
        match: codeNarcConfigFile
      - name: support.function.project.codeNarcConfigFileName.gradle
        match: codeNarcConfigFileName
      - name: support.function.project.codeNarcReportsDir.gradle
        match: codeNarcReportsDir
      - name: support.function.project.codeNarcReportsDirName.gradle
        match: codeNarcReportsDirName
      - name: support.function.project.codenarc.gradle
        match: codenarc
      - name: support.function.project.distributions.gradle
        match: distributions
      - name: support.function.project.appDirName.gradle
        match: appDirName
      - name: support.function.project.deploymentDescriptor.gradle
        match: deploymentDescriptor
      - name: support.function.project.libDirName.gradle
        match: libDirName
      - name: support.function.project.eclipse.gradle
        match: eclipse
      - name: support.function.project.findbugs.gradle
        match: findbugs
      - name: support.function.project.idea.gradle
        match: idea
      - name: support.function.project.jacoco.gradle
        match: jacoco
      - name: support.function.project.apiDocTitle.gradle
        match: apiDocTitle
      - name: support.function.project.archivesBaseName.gradle
        match: archivesBaseName
      - name: support.function.project.distsDir.gradle
        match: distsDir
      - name: support.function.project.distsDirName.gradle
        match: distsDirName
      - name: support.function.project.docsDir.gradle
        match: docsDir
      - name: support.function.project.docsDirName.gradle
        match: docsDirName
      - name: support.function.project.libsDir.gradle
        match: libsDir
      - name: support.function.project.libsDirName.gradle
        match: libsDirName
      - name: support.function.project.reportsDir.gradle
        match: reportsDir
      - name: support.function.project.reportsDirName.gradle
        match: reportsDirName
      - name: support.function.project.sourceCompatibility.gradle
        match: sourceCompatibility
      - name: support.function.project.sourceSets.gradle
        match: sourceSets
      - name: support.function.project.targetCompatibility.gradle
        match: targetCompatibility
      - name: support.function.project.testReportDir.gradle
        match: testReportDir
      - name: support.function.project.testReportDirName.gradle
        match: testReportDirName
      - name: support.function.project.testResultsDir.gradle
        match: testResultsDir
      - name: support.function.project.testResultsDirName.gradle
        match: testResultsDirName
      - name: support.function.project.jdepend.gradle
        match: jdepend
      - name: support.function.project.httpPort.gradle
        match: httpPort
      - name: support.function.project.stopKey.gradle
        match: stopKey
      - name: support.function.project.stopPort.gradle
        match: stopPort
      - name: support.function.project.conf2ScopeMappings.gradle
        match: conf2ScopeMappings
      - name: support.function.project.mavenPomDir.gradle
        match: mavenPomDir
      - name: support.function.project.buildTypes.gradle
        match: buildTypes
      - name: support.function.project.executables.gradle
        match: executables
      - name: support.function.project.flavors.gradle
        match: flavors
      - name: support.function.project.libraries.gradle
        match: libraries
      - name: support.function.project.platforms.gradle
        match: platforms
      - name: support.function.project.toolChains.gradle
        match: toolChains
      - name: support.function.project.pmd.gradle
        match: pmd
      - name: support.function.project.projectReportDir.gradle
        match: projectReportDir
      - name: support.function.project.projectReportDirName.gradle
        match: projectReportDirName
      - name: support.function.project.publishing.gradle
        match: publishing
      - name: support.function.project.signing.gradle
        match: signing
      - name: support.function.project.visualStudio.gradle
        match: visualStudio
      - name: support.function.project.webAppDir.gradle
        match: webAppDir
      - name: support.function.project.webAppDirName.gradle
        match: webAppDirName
      - name: support.function.project.absoluteProjectPath.gradle
        match: absoluteProjectPath
      - name: support.function.project.afterEvaluate.gradle
        match: afterEvaluate
      - name: support.function.project.apply.gradle
        match: apply
      - name: support.function.project.beforeEvaluate.gradle
        match: beforeEvaluate
      - name: support.function.project.childrenDependOnMe.gradle
        match: childrenDependOnMe
      - name: support.function.project.configure.gradle
        match: configure
      - name: support.function.project.container.gradle
        match: container
      - name: support.function.project.copy.gradle
        match: copy
      - name: support.function.project.copySpec.gradle
        match: copySpec
      - name: support.function.project.delete.gradle
        match: delete
      - name: support.function.project.dependsOn.gradle
        match: dependsOn
      - name: support.function.project.dependsOnChildren.gradle
        match: dependsOnChildren
      - name: support.function.project.evaluationDependsOn.gradle
        match: evaluationDependsOn
      - name: support.function.project.exec.gradle
        match: exec
      - name: support.function.project.file.gradle
        match: file
      - name: support.function.project.fileTree.gradle
        match: fileTree
      - name: support.function.project.files.gradle
        match: files
      - name: support.function.project.findProject.gradle
        match: findProject
      - name: support.function.project.getAllTasks.gradle
        match: getAllTasks
      - name: support.function.project.getTasksByName.gradle
        match: getTasksByName
      - name: support.function.project.hasProperty.gradle
        match: hasProperty
      - name: support.function.project.javaexec.gradle
        match: javaexec
      - name: support.function.project.mkdir.gradle
        match: mkdir
      - name: support.function.project.property.gradle
        match: property
      - name: support.function.project.relativePath.gradle
        match: relativePath
      - name: support.function.project.relativeProjectPath.gradle
        match: relativeProjectPath
      - name: support.function.project.setProperty.gradle
        match: setProperty
      - name: support.function.project.tarTree.gradle
        match: tarTree
      - name: support.function.project.task.gradle
        match: task
      - name: support.function.project.uri.gradle
        match: uri
      - name: support.function.project.zipTree.gradle
        match: zipTree
      - name: support.function.project.manifest.gradle
        match: manifest
      - name: support.function.project.pom.gradle
        match: pom
      - name: support.function.project.osgiManifest.gradle
        match: osgiManifest
      - name: support.function.project.Task.gradle
        match: Task
      - name: support.function.project.Gradle.gradle
        match: Gradle
      - name: support.function.project.Settings.gradle
        match: Settings
      - name: support.function.project.Script.gradle
        match: Script
      - name: support.function.project.SourceSet.gradle
        match: SourceSet
      - name: support.function.project.SourceSetOutput.gradle
        match: SourceSetOutput
      - name: support.function.project.IncrementalTaskInputs.gradle
        match: IncrementalTaskInputs
      - name: support.function.project.Configuration.gradle
        match: Configuration
      - name: support.function.project.ResolutionStrategy.gradle
        match: ResolutionStrategy
      - name: support.function.project.ConventionProperty.gradle
        match: ConventionProperty
      - name: support.function.project.ExtensionAware.gradle
        match: ExtensionAware
      - name: support.function.project.ExtraPropertiesExtension.gradle
        match: ExtraPropertiesExtension
      - name: support.function.project.PublishingExtension.gradle
        match: PublishingExtension
      - name: support.function.project.Report.gradle
        match: Report
      - name: support.function.project.Reporting.gradle
        match: Reporting
      - name: support.function.project.ReportContainer.gradle
        match: ReportContainer
      - name: support.function.project.ReportingExtension.gradle
        match: ReportingExtension
      - name: support.function.project.IvyPublication.gradle
        match: IvyPublication
      - name: support.function.project.IvyArtifact.gradle
        match: IvyArtifact
      - name: support.function.project.IvyArtifactSet.gradle
        match: IvyArtifactSet
      - name: support.function.project.IvyModuleDescriptor.gradle
        match: IvyModuleDescriptor
      - name: support.function.project.MavenPublication.gradle
        match: MavenPublication
      - name: support.function.project.MavenArtifact.gradle
        match: MavenArtifact
      - name: support.function.project.MavenArtifactSet.gradle
        match: MavenArtifactSet
      - name: support.function.project.MavenPom.gradle
        match: MavenPom
      - name: support.function.project.ConfigurationContainer.gradle
        match: ConfigurationContainer
      - name: support.function.project.RepositoryHandler.gradle
        match: RepositoryHandler
      - name: support.function.project.DependencyHandler.gradle
        match: DependencyHandler
      - name: support.function.project.ArtifactHandler.gradle
        match: ArtifactHandler
      - name: support.function.project.TaskReportTask.gradle
        match: TaskReportTask
      - name: support.function.project.ProjectReportTask.gradle
        match: ProjectReportTask
      - name: support.function.project.DependencyReportTask.gradle
        match: DependencyReportTask
      - name: support.function.project.DependencyInsightReportTask.gradle
        match: DependencyInsightReportTask
      - name: support.function.project.PropertyReportTask.gradle
        match: PropertyReportTask
      - name: support.function.project.AntlrTask.gradle
        match: AntlrTask
      - name: support.function.project.Checkstyle.gradle
        match: Checkstyle
      - name: support.function.project.CodeNarc.gradle
        match: CodeNarc
      - name: support.function.project.CompareGradleBuilds.gradle
        match: CompareGradleBuilds
      - name: support.function.project.Copy.gradle
        match: Copy
      - name: support.function.project.CreateStartScripts.gradle
        match: CreateStartScripts
      - name: support.function.project.Delete.gradle
        match: Delete
      - name: support.function.project.Directory.gradle
        match: Directory
      - name: support.function.project.Exec.gradle
        match: Exec
      - name: support.function.project.FindBugs.gradle
        match: FindBugs
      - name: support.function.project.GenerateIvyDescriptor.gradle
        match: GenerateIvyDescriptor
      - name: support.function.project.GenerateMavenPom.gradle
        match: GenerateMavenPom
      - name: support.function.project.GenerateBuildDashboard.gradle
        match: GenerateBuildDashboard
      - name: support.function.project.GradleBuild.gradle
        match: GradleBuild
      - name: support.function.project.GroovyCompile.gradle
        match: GroovyCompile
      - name: support.function.project.Groovydoc.gradle
        match: Groovydoc
      - name: support.function.project.HtmlDependencyReportTask.gradle
        match: HtmlDependencyReportTask
      - name: support.function.project.Jar.gradle
        match: Jar
      - name: support.function.project.JavaCompile.gradle
        match: JavaCompile
      - name: support.function.project.Javadoc.gradle
        match: Javadoc
      - name: support.function.project.JavaExec.gradle
        match: JavaExec
      - name: support.function.project.JDepend.gradle
        match: JDepend
      - name: support.function.project.JettyRun.gradle
        match: JettyRun
      - name: support.function.project.JettyRunWar.gradle
        match: JettyRunWar
      - name: support.function.project.JettyStop.gradle
        match: JettyStop
      - name: support.function.project.Pmd.gradle
        match: Pmd
      - name: support.function.project.PublishToIvyRepository.gradle
        match: PublishToIvyRepository
      - name: support.function.project.PublishToMavenRepository.gradle
        match: PublishToMavenRepository
      - name: support.function.project.ScalaCompile.gradle
        match: ScalaCompile
      - name: support.function.project.ScalaDoc.gradle
        match: ScalaDoc
      - name: support.function.project.SonarAnalyze.gradle
        match: SonarAnalyze
      - name: support.function.project.Sync.gradle
        match: Sync
      - name: support.function.project.Tar.gradle
        match: Tar
      - name: support.function.project.Test.gradle
        match: Test
      - name: support.function.project.TestReport.gradle
        match: TestReport
      - name: support.function.project.Upload.gradle
        match: Upload
      - name: support.function.project.War.gradle
        match: War
      - name: support.function.project.Wrapper.gradle
        match: Wrapper
      - name: support.function.project.Zip.gradle
        match: Zip


  auto-generated-tasks:
    patterns:
      - name: Task.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Task.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Task.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Task.gradle
            match: actions
          - name: support.function.task.Task.gradle
            match: ant
          - name: support.function.task.Task.gradle
            match: convention
          - name: support.function.task.Task.gradle
            match: dependsOn
          - name: support.function.task.Task.gradle
            match: description
          - name: support.function.task.Task.gradle
            match: didWork
          - name: support.function.task.Task.gradle
            match: enabled
          - name: support.function.task.Task.gradle
            match: extensions
          - name: support.function.task.Task.gradle
            match: finalizedBy
          - name: support.function.task.Task.gradle
            match: group
          - name: support.function.task.Task.gradle
            match: inputs
          - name: support.function.task.Task.gradle
            match: logger
          - name: support.function.task.Task.gradle
            match: logging
          - name: support.function.task.Task.gradle
            match: mustRunAfter
          - name: support.function.task.Task.gradle
            match: name
          - name: support.function.task.Task.gradle
            match: outputs
          - name: support.function.task.Task.gradle
            match: path
          - name: support.function.task.Task.gradle
            match: project
          - name: support.function.task.Task.gradle
            match: state
          - name: support.function.task.Task.gradle
            match: taskDependencies
          - name: support.function.task.Task.gradle
            match: temporaryDir
          - name: support.function.task.Task.gradle
            match: deleteAllActions
          - name: support.function.task.Task.gradle
            match: doFirst
          - name: support.function.task.Task.gradle
            match: doLast
          - name: support.function.task.Task.gradle
            match: hasProperty
          - name: support.function.task.Task.gradle
            match: leftShift
          - name: support.function.task.Task.gradle
            match: onlyIf
          - name: support.function.task.Task.gradle
            match: property
          - name: support.function.task.Task.gradle
            match: setProperty
          - include: source.groovy

      - name: Gradle.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Gradle.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Gradle.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Gradle.gradle
            match: gradle
          - name: support.function.task.Gradle.gradle
            match: gradleHomeDir
          - name: support.function.task.Gradle.gradle
            match: gradleUserHomeDir
          - name: support.function.task.Gradle.gradle
            match: gradleVersion
          - name: support.function.task.Gradle.gradle
            match: parent
          - name: support.function.task.Gradle.gradle
            match: rootProject
          - name: support.function.task.Gradle.gradle
            match: startParameter
          - name: support.function.task.Gradle.gradle
            match: taskGraph
          - name: support.function.task.Gradle.gradle
            match: addBuildListener
          - name: support.function.task.Gradle.gradle
            match: addListener
          - name: support.function.task.Gradle.gradle
            match: addProjectEvaluationListener
          - name: support.function.task.Gradle.gradle
            match: afterProject
          - name: support.function.task.Gradle.gradle
            match: allprojects
          - name: support.function.task.Gradle.gradle
            match: beforeProject
          - name: support.function.task.Gradle.gradle
            match: buildFinished
          - name: support.function.task.Gradle.gradle
            match: projectsEvaluated
          - name: support.function.task.Gradle.gradle
            match: projectsLoaded
          - name: support.function.task.Gradle.gradle
            match: removeListener
          - name: support.function.task.Gradle.gradle
            match: removeProjectEvaluationListener
          - name: support.function.task.Gradle.gradle
            match: settingsEvaluated
          - name: support.function.task.Gradle.gradle
            match: useLogger
          - include: source.groovy

      - name: Settings.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Settings.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Settings.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Settings.gradle
            match: gradle
          - name: support.function.task.Settings.gradle
            match: rootDir
          - name: support.function.task.Settings.gradle
            match: rootProject
          - name: support.function.task.Settings.gradle
            match: settings
          - name: support.function.task.Settings.gradle
            match: settingsDir
          - name: support.function.task.Settings.gradle
            match: startParameter
          - name: support.function.task.Settings.gradle
            match: findProject
          - name: support.function.task.Settings.gradle
            match: include
          - name: support.function.task.Settings.gradle
            match: includeFlat
          - name: support.function.task.Settings.gradle
            match: project
          - include: source.groovy

      - name: Script.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Script.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Script.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Script.gradle
            match: buildscript
          - name: support.function.task.Script.gradle
            match: logger
          - name: support.function.task.Script.gradle
            match: logging
          - name: support.function.task.Script.gradle
            match: resources
          - name: support.function.task.Script.gradle
            match: apply
          - name: support.function.task.Script.gradle
            match: copy
          - name: support.function.task.Script.gradle
            match: copySpec
          - name: support.function.task.Script.gradle
            match: delete
          - name: support.function.task.Script.gradle
            match: exec
          - name: support.function.task.Script.gradle
            match: file
          - name: support.function.task.Script.gradle
            match: fileTree
          - name: support.function.task.Script.gradle
            match: files
          - name: support.function.task.Script.gradle
            match: javaexec
          - name: support.function.task.Script.gradle
            match: mkdir
          - name: support.function.task.Script.gradle
            match: relativePath
          - name: support.function.task.Script.gradle
            match: tarTree
          - name: support.function.task.Script.gradle
            match: uri
          - name: support.function.task.Script.gradle
            match: zipTree
          - include: source.groovy

      - name: SourceSet.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: SourceSet.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'SourceSet.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.SourceSet.gradle
            match: allJava
          - name: support.function.task.SourceSet.gradle
            match: allSource
          - name: support.function.task.SourceSet.gradle
            match: compileClasspath
          - name: support.function.task.SourceSet.gradle
            match: java
          - name: support.function.task.SourceSet.gradle
            match: name
          - name: support.function.task.SourceSet.gradle
            match: output
          - name: support.function.task.SourceSet.gradle
            match: resources
          - name: support.function.task.SourceSet.gradle
            match: runtimeClasspath
          - name: support.function.task.SourceSet.gradle
            match: antlr
          - name: support.function.task.SourceSet.gradle
            match: allGroovy
          - name: support.function.task.SourceSet.gradle
            match: groovy
          - name: support.function.task.SourceSet.gradle
            match: allScala
          - name: support.function.task.SourceSet.gradle
            match: scala
          - name: support.function.task.SourceSet.gradle
            match: compiledBy
          - name: support.function.task.SourceSet.gradle
            match: getCompileTaskName
          - name: support.function.task.SourceSet.gradle
            match: getTaskName
          - include: source.groovy

      - name: SourceSetOutput.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: SourceSetOutput.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'SourceSetOutput.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.SourceSetOutput.gradle
            match: classesDir
          - name: support.function.task.SourceSetOutput.gradle
            match: resourcesDir
          - name: support.function.task.SourceSetOutput.gradle
            match: dir
          - name: support.function.task.SourceSetOutput.gradle
            match: getDirs
          - include: source.groovy

      - name: IncrementalTaskInputs.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: IncrementalTaskInputs.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'IncrementalTaskInputs.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.IncrementalTaskInputs.gradle
            match: incremental
          - name: support.function.task.IncrementalTaskInputs.gradle
            match: outOfDate
          - name: support.function.task.IncrementalTaskInputs.gradle
            match: removed
          - include: source.groovy

      - name: Configuration.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Configuration.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Configuration.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Configuration.gradle
            match: allArtifacts
          - name: support.function.task.Configuration.gradle
            match: allDependencies
          - name: support.function.task.Configuration.gradle
            match: artifacts
          - name: support.function.task.Configuration.gradle
            match: buildDependencies
          - name: support.function.task.Configuration.gradle
            match: dependencies
          - name: support.function.task.Configuration.gradle
            match: description
          - name: support.function.task.Configuration.gradle
            match: excludeRules
          - name: support.function.task.Configuration.gradle
            match: extendsFrom
          - name: support.function.task.Configuration.gradle
            match: hierarchy
          - name: support.function.task.Configuration.gradle
            match: incoming
          - name: support.function.task.Configuration.gradle
            match: name
          - name: support.function.task.Configuration.gradle
            match: resolutionStrategy
          - name: support.function.task.Configuration.gradle
            match: resolvedConfiguration
          - name: support.function.task.Configuration.gradle
            match: state
          - name: support.function.task.Configuration.gradle
            match: transitive
          - name: support.function.task.Configuration.gradle
            match: visible
          - name: support.function.task.Configuration.gradle
            match: copy
          - name: support.function.task.Configuration.gradle
            match: copyRecursive
          - name: support.function.task.Configuration.gradle
            match: exclude
          - name: support.function.task.Configuration.gradle
            match: fileCollection
          - name: support.function.task.Configuration.gradle
            match: files
          - name: support.function.task.Configuration.gradle
            match: getTaskDependencyFromProjectDependency
          - include: source.groovy

      - name: ResolutionStrategy.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ResolutionStrategy.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ResolutionStrategy.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ResolutionStrategy.gradle
            match: forcedModules
          - name: support.function.task.ResolutionStrategy.gradle
            match: cacheChangingModulesFor
          - name: support.function.task.ResolutionStrategy.gradle
            match: cacheDynamicVersionsFor
          - name: support.function.task.ResolutionStrategy.gradle
            match: eachDependency
          - name: support.function.task.ResolutionStrategy.gradle
            match: failOnVersionConflict
          - name: support.function.task.ResolutionStrategy.gradle
            match: force
          - include: source.groovy

      - name: ConventionProperty.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ConventionProperty.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ConventionProperty.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - include: source.groovy

      - name: ExtensionAware.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ExtensionAware.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ExtensionAware.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ExtensionAware.gradle
            match: extensions
          - include: source.groovy

      - name: ExtraPropertiesExtension.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ExtraPropertiesExtension.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ExtraPropertiesExtension.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ExtraPropertiesExtension.gradle
            match: properties
          - name: support.function.task.ExtraPropertiesExtension.gradle
            match: get
          - name: support.function.task.ExtraPropertiesExtension.gradle
            match: has
          - name: support.function.task.ExtraPropertiesExtension.gradle
            match: set
          - include: source.groovy

      - name: PublishingExtension.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: PublishingExtension.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'PublishingExtension.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.PublishingExtension.gradle
            match: publications
          - name: support.function.task.PublishingExtension.gradle
            match: repositories
          - include: source.groovy

      - name: Report.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Report.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Report.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Report.gradle
            match: destination
          - name: support.function.task.Report.gradle
            match: displayName
          - name: support.function.task.Report.gradle
            match: enabled
          - name: support.function.task.Report.gradle
            match: name
          - name: support.function.task.Report.gradle
            match: outputType
          - include: source.groovy

      - name: Reporting.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Reporting.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Reporting.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Reporting.gradle
            match: reports
          - include: source.groovy

      - name: ReportContainer.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ReportContainer.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ReportContainer.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ReportContainer.gradle
            match: enabled
          - include: source.groovy

      - name: ReportingExtension.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ReportingExtension.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ReportingExtension.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ReportingExtension.gradle
            match: baseDir
          - name: support.function.task.ReportingExtension.gradle
            match: file
          - include: source.groovy

      - name: IvyPublication.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: IvyPublication.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'IvyPublication.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.IvyPublication.gradle
            match: artifacts
          - name: support.function.task.IvyPublication.gradle
            match: configurations
          - name: support.function.task.IvyPublication.gradle
            match: descriptor
          - name: support.function.task.IvyPublication.gradle
            match: module
          - name: support.function.task.IvyPublication.gradle
            match: organisation
          - name: support.function.task.IvyPublication.gradle
            match: revision
          - name: support.function.task.IvyPublication.gradle
            match: artifact
          - name: support.function.task.IvyPublication.gradle
            match: from
          - include: source.groovy

      - name: IvyArtifact.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: IvyArtifact.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'IvyArtifact.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.IvyArtifact.gradle
            match: classifier
          - name: support.function.task.IvyArtifact.gradle
            match: conf
          - name: support.function.task.IvyArtifact.gradle
            match: extension
          - name: support.function.task.IvyArtifact.gradle
            match: file
          - name: support.function.task.IvyArtifact.gradle
            match: name
          - name: support.function.task.IvyArtifact.gradle
            match: type
          - name: support.function.task.IvyArtifact.gradle
            match: builtBy
          - include: source.groovy

      - name: IvyArtifactSet.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: IvyArtifactSet.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'IvyArtifactSet.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.IvyArtifactSet.gradle
            match: artifact
          - include: source.groovy

      - name: IvyModuleDescriptor.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: IvyModuleDescriptor.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'IvyModuleDescriptor.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.IvyModuleDescriptor.gradle
            match: withXml
          - include: source.groovy

      - name: MavenPublication.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: MavenPublication.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'MavenPublication.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.MavenPublication.gradle
            match: artifactId
          - name: support.function.task.MavenPublication.gradle
            match: artifacts
          - name: support.function.task.MavenPublication.gradle
            match: groupId
          - name: support.function.task.MavenPublication.gradle
            match: pom
          - name: support.function.task.MavenPublication.gradle
            match: version
          - name: support.function.task.MavenPublication.gradle
            match: artifact
          - name: support.function.task.MavenPublication.gradle
            match: from
          - name: support.function.task.MavenPublication.gradle
            match: setArtifacts
          - include: source.groovy

      - name: MavenArtifact.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: MavenArtifact.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'MavenArtifact.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.MavenArtifact.gradle
            match: classifier
          - name: support.function.task.MavenArtifact.gradle
            match: extension
          - name: support.function.task.MavenArtifact.gradle
            match: file
          - name: support.function.task.MavenArtifact.gradle
            match: builtBy
          - include: source.groovy

      - name: MavenArtifactSet.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: MavenArtifactSet.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'MavenArtifactSet.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.MavenArtifactSet.gradle
            match: artifact
          - include: source.groovy

      - name: MavenPom.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: MavenPom.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'MavenPom.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.MavenPom.gradle
            match: withXml
          - include: source.groovy

      - name: ConfigurationContainer.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ConfigurationContainer.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ConfigurationContainer.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ConfigurationContainer.gradle
            match: add
          - name: support.function.task.ConfigurationContainer.gradle
            match: detachedConfiguration
          - name: support.function.task.ConfigurationContainer.gradle
            match: getAt
          - name: support.function.task.ConfigurationContainer.gradle
            match: getByName
          - include: source.groovy

      - name: RepositoryHandler.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: RepositoryHandler.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'RepositoryHandler.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.RepositoryHandler.gradle
            match: flatDir
          - name: support.function.task.RepositoryHandler.gradle
            match: ivy
          - name: support.function.task.RepositoryHandler.gradle
            match: jcenter
          - name: support.function.task.RepositoryHandler.gradle
            match: maven
          - name: support.function.task.RepositoryHandler.gradle
            match: mavenCentral
          - name: support.function.task.RepositoryHandler.gradle
            match: mavenLocal
          - name: support.function.task.RepositoryHandler.gradle
            match: mavenRepo
          - name: support.function.task.RepositoryHandler.gradle
            match: mavenDeployer
          - name: support.function.task.RepositoryHandler.gradle
            match: mavenInstaller
          - include: source.groovy

      - name: DependencyHandler.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: DependencyHandler.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'DependencyHandler.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.DependencyHandler.gradle
            match: components
          - name: support.function.task.DependencyHandler.gradle
            match: add
          - name: support.function.task.DependencyHandler.gradle
            match: create
          - name: support.function.task.DependencyHandler.gradle
            match: gradleApi
          - name: support.function.task.DependencyHandler.gradle
            match: localGroovy
          - name: support.function.task.DependencyHandler.gradle
            match: module
          - name: support.function.task.DependencyHandler.gradle
            match: project
          - include: source.groovy

      - name: ArtifactHandler.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ArtifactHandler.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ArtifactHandler.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ArtifactHandler.gradle
            match: add
          - include: source.groovy

      - name: TaskReportTask.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: TaskReportTask.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'TaskReportTask.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.TaskReportTask.gradle
            match: outputFile
          - name: support.function.task.TaskReportTask.gradle
            match: projects
          - include: source.groovy

      - name: ProjectReportTask.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ProjectReportTask.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ProjectReportTask.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ProjectReportTask.gradle
            match: outputFile
          - name: support.function.task.ProjectReportTask.gradle
            match: projects
          - include: source.groovy

      - name: DependencyReportTask.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: DependencyReportTask.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'DependencyReportTask.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.DependencyReportTask.gradle
            match: configurations
          - name: support.function.task.DependencyReportTask.gradle
            match: outputFile
          - name: support.function.task.DependencyReportTask.gradle
            match: projects
          - include: source.groovy

      - name: DependencyInsightReportTask.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: DependencyInsightReportTask.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'DependencyInsightReportTask.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.DependencyInsightReportTask.gradle
            match: configuration
          - name: support.function.task.DependencyInsightReportTask.gradle
            match: dependencySpec
          - include: source.groovy

      - name: PropertyReportTask.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: PropertyReportTask.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'PropertyReportTask.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.PropertyReportTask.gradle
            match: outputFile
          - name: support.function.task.PropertyReportTask.gradle
            match: projects
          - include: source.groovy

      - name: AntlrTask.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: AntlrTask.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'AntlrTask.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.AntlrTask.gradle
            match: antlrClasspath
          - name: support.function.task.AntlrTask.gradle
            match: excludes
          - name: support.function.task.AntlrTask.gradle
            match: includes
          - name: support.function.task.AntlrTask.gradle
            match: outputDirectory
          - name: support.function.task.AntlrTask.gradle
            match: source
          - name: support.function.task.AntlrTask.gradle
            match: trace
          - name: support.function.task.AntlrTask.gradle
            match: traceLexer
          - name: support.function.task.AntlrTask.gradle
            match: traceParser
          - name: support.function.task.AntlrTask.gradle
            match: traceTreeWalker
          - name: support.function.task.AntlrTask.gradle
            match: exclude
          - name: support.function.task.AntlrTask.gradle
            match: include
          - include: source.groovy

      - name: Checkstyle.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Checkstyle.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Checkstyle.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Checkstyle.gradle
            match: checkstyleClasspath
          - name: support.function.task.Checkstyle.gradle
            match: classpath
          - name: support.function.task.Checkstyle.gradle
            match: configFile
          - name: support.function.task.Checkstyle.gradle
            match: configProperties
          - name: support.function.task.Checkstyle.gradle
            match: excludes
          - name: support.function.task.Checkstyle.gradle
            match: ignoreFailures
          - name: support.function.task.Checkstyle.gradle
            match: includes
          - name: support.function.task.Checkstyle.gradle
            match: reports
          - name: support.function.task.Checkstyle.gradle
            match: showViolations
          - name: support.function.task.Checkstyle.gradle
            match: source
          - name: support.function.task.Checkstyle.gradle
            match: exclude
          - name: support.function.task.Checkstyle.gradle
            match: include
          - include: source.groovy

      - name: CodeNarc.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: CodeNarc.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'CodeNarc.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.CodeNarc.gradle
            match: codenarcClasspath
          - name: support.function.task.CodeNarc.gradle
            match: configFile
          - name: support.function.task.CodeNarc.gradle
            match: excludes
          - name: support.function.task.CodeNarc.gradle
            match: ignoreFailures
          - name: support.function.task.CodeNarc.gradle
            match: includes
          - name: support.function.task.CodeNarc.gradle
            match: maxPriority1Violations
          - name: support.function.task.CodeNarc.gradle
            match: maxPriority2Violations
          - name: support.function.task.CodeNarc.gradle
            match: maxPriority3Violations
          - name: support.function.task.CodeNarc.gradle
            match: reports
          - name: support.function.task.CodeNarc.gradle
            match: source
          - name: support.function.task.CodeNarc.gradle
            match: exclude
          - name: support.function.task.CodeNarc.gradle
            match: include
          - include: source.groovy

      - name: CompareGradleBuilds.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: CompareGradleBuilds.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'CompareGradleBuilds.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.CompareGradleBuilds.gradle
            match: ignoreFailures
          - name: support.function.task.CompareGradleBuilds.gradle
            match: reportDir
          - name: support.function.task.CompareGradleBuilds.gradle
            match: sourceBuild
          - name: support.function.task.CompareGradleBuilds.gradle
            match: targetBuild
          - include: source.groovy

      - name: Copy.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Copy.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Copy.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Copy.gradle
            match: caseSensitive
          - name: support.function.task.Copy.gradle
            match: destinationDir
          - name: support.function.task.Copy.gradle
            match: dirMode
          - name: support.function.task.Copy.gradle
            match: duplicatesStrategy
          - name: support.function.task.Copy.gradle
            match: excludes
          - name: support.function.task.Copy.gradle
            match: fileMode
          - name: support.function.task.Copy.gradle
            match: includeEmptyDirs
          - name: support.function.task.Copy.gradle
            match: includes
          - name: support.function.task.Copy.gradle
            match: source
          - name: support.function.task.Copy.gradle
            match: eachFile
          - name: support.function.task.Copy.gradle
            match: exclude
          - name: support.function.task.Copy.gradle
            match: expand
          - name: support.function.task.Copy.gradle
            match: filesMatching
          - name: support.function.task.Copy.gradle
            match: filesNotMatching
          - name: support.function.task.Copy.gradle
            match: filter
          - name: support.function.task.Copy.gradle
            match: from
          - name: support.function.task.Copy.gradle
            match: include
          - name: support.function.task.Copy.gradle
            match: into
          - name: support.function.task.Copy.gradle
            match: rename
          - name: support.function.task.Copy.gradle
            match: with
          - include: source.groovy

      - name: CreateStartScripts.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: CreateStartScripts.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'CreateStartScripts.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.CreateStartScripts.gradle
            match: applicationName
          - name: support.function.task.CreateStartScripts.gradle
            match: classpath
          - name: support.function.task.CreateStartScripts.gradle
            match: defaultJvmOpts
          - name: support.function.task.CreateStartScripts.gradle
            match: mainClassName
          - name: support.function.task.CreateStartScripts.gradle
            match: optsEnvironmentVar
          - name: support.function.task.CreateStartScripts.gradle
            match: outputDir
          - include: source.groovy

      - name: Delete.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Delete.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Delete.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Delete.gradle
            match: delete
          - name: support.function.task.Delete.gradle
            match: targetFiles
          - include: source.groovy

      - name: Directory.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Directory.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Directory.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - include: source.groovy

      - name: Exec.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Exec.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Exec.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Exec.gradle
            match: args
          - name: support.function.task.Exec.gradle
            match: commandLine
          - name: support.function.task.Exec.gradle
            match: environment
          - name: support.function.task.Exec.gradle
            match: errorOutput
          - name: support.function.task.Exec.gradle
            match: execResult
          - name: support.function.task.Exec.gradle
            match: executable
          - name: support.function.task.Exec.gradle
            match: ignoreExitValue
          - name: support.function.task.Exec.gradle
            match: standardInput
          - name: support.function.task.Exec.gradle
            match: standardOutput
          - name: support.function.task.Exec.gradle
            match: workingDir
          - include: source.groovy

      - name: FindBugs.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: FindBugs.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'FindBugs.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.FindBugs.gradle
            match: classes
          - name: support.function.task.FindBugs.gradle
            match: classpath
          - name: support.function.task.FindBugs.gradle
            match: effort
          - name: support.function.task.FindBugs.gradle
            match: excludeFilter
          - name: support.function.task.FindBugs.gradle
            match: excludes
          - name: support.function.task.FindBugs.gradle
            match: findbugsClasspath
          - name: support.function.task.FindBugs.gradle
            match: ignoreFailures
          - name: support.function.task.FindBugs.gradle
            match: includeFilter
          - name: support.function.task.FindBugs.gradle
            match: includes
          - name: support.function.task.FindBugs.gradle
            match: maxHeapSize
          - name: support.function.task.FindBugs.gradle
            match: omitVisitors
          - name: support.function.task.FindBugs.gradle
            match: pluginClasspath
          - name: support.function.task.FindBugs.gradle
            match: reportLevel
          - name: support.function.task.FindBugs.gradle
            match: reports
          - name: support.function.task.FindBugs.gradle
            match: source
          - name: support.function.task.FindBugs.gradle
            match: visitors
          - name: support.function.task.FindBugs.gradle
            match: exclude
          - name: support.function.task.FindBugs.gradle
            match: include
          - include: source.groovy

      - name: GenerateIvyDescriptor.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: GenerateIvyDescriptor.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'GenerateIvyDescriptor.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.GenerateIvyDescriptor.gradle
            match: descriptor
          - name: support.function.task.GenerateIvyDescriptor.gradle
            match: destination
          - include: source.groovy

      - name: GenerateMavenPom.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: GenerateMavenPom.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'GenerateMavenPom.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.GenerateMavenPom.gradle
            match: destination
          - name: support.function.task.GenerateMavenPom.gradle
            match: pom
          - include: source.groovy

      - name: GenerateBuildDashboard.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: GenerateBuildDashboard.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'GenerateBuildDashboard.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.GenerateBuildDashboard.gradle
            match: reports
          - name: support.function.task.GenerateBuildDashboard.gradle
            match: aggregate
          - include: source.groovy

      - name: GradleBuild.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: GradleBuild.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'GradleBuild.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.GradleBuild.gradle
            match: buildFile
          - name: support.function.task.GradleBuild.gradle
            match: dir
          - name: support.function.task.GradleBuild.gradle
            match: startParameter
          - name: support.function.task.GradleBuild.gradle
            match: tasks
          - include: source.groovy

      - name: GroovyCompile.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: GroovyCompile.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'GroovyCompile.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.GroovyCompile.gradle
            match: classpath
          - name: support.function.task.GroovyCompile.gradle
            match: destinationDir
          - name: support.function.task.GroovyCompile.gradle
            match: excludes
          - name: support.function.task.GroovyCompile.gradle
            match: groovyClasspath
          - name: support.function.task.GroovyCompile.gradle
            match: groovyOptions
          - name: support.function.task.GroovyCompile.gradle
            match: includes
          - name: support.function.task.GroovyCompile.gradle
            match: options
          - name: support.function.task.GroovyCompile.gradle
            match: source
          - name: support.function.task.GroovyCompile.gradle
            match: sourceCompatibility
          - name: support.function.task.GroovyCompile.gradle
            match: targetCompatibility
          - name: support.function.task.GroovyCompile.gradle
            match: exclude
          - name: support.function.task.GroovyCompile.gradle
            match: include
          - include: source.groovy

      - name: Groovydoc.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Groovydoc.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Groovydoc.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Groovydoc.gradle
            match: classpath
          - name: support.function.task.Groovydoc.gradle
            match: destinationDir
          - name: support.function.task.Groovydoc.gradle
            match: docTitle
          - name: support.function.task.Groovydoc.gradle
            match: excludes
          - name: support.function.task.Groovydoc.gradle
            match: footer
          - name: support.function.task.Groovydoc.gradle
            match: groovyClasspath
          - name: support.function.task.Groovydoc.gradle
            match: header
          - name: support.function.task.Groovydoc.gradle
            match: includePrivate
          - name: support.function.task.Groovydoc.gradle
            match: includes
          - name: support.function.task.Groovydoc.gradle
            match: links
          - name: support.function.task.Groovydoc.gradle
            match: overview
          - name: support.function.task.Groovydoc.gradle
            match: source
          - name: support.function.task.Groovydoc.gradle
            match: use
          - name: support.function.task.Groovydoc.gradle
            match: windowTitle
          - name: support.function.task.Groovydoc.gradle
            match: exclude
          - name: support.function.task.Groovydoc.gradle
            match: include
          - name: support.function.task.Groovydoc.gradle
            match: link
          - include: source.groovy

      - name: HtmlDependencyReportTask.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: HtmlDependencyReportTask.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'HtmlDependencyReportTask.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.HtmlDependencyReportTask.gradle
            match: projects
          - name: support.function.task.HtmlDependencyReportTask.gradle
            match: reports
          - include: source.groovy

      - name: Jar.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Jar.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Jar.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Jar.gradle
            match: appendix
          - name: support.function.task.Jar.gradle
            match: archiveName
          - name: support.function.task.Jar.gradle
            match: archivePath
          - name: support.function.task.Jar.gradle
            match: baseName
          - name: support.function.task.Jar.gradle
            match: caseSensitive
          - name: support.function.task.Jar.gradle
            match: classifier
          - name: support.function.task.Jar.gradle
            match: destinationDir
          - name: support.function.task.Jar.gradle
            match: dirMode
          - name: support.function.task.Jar.gradle
            match: duplicatesStrategy
          - name: support.function.task.Jar.gradle
            match: entryCompression
          - name: support.function.task.Jar.gradle
            match: excludes
          - name: support.function.task.Jar.gradle
            match: extension
          - name: support.function.task.Jar.gradle
            match: fileMode
          - name: support.function.task.Jar.gradle
            match: includeEmptyDirs
          - name: support.function.task.Jar.gradle
            match: includes
          - name: support.function.task.Jar.gradle
            match: manifest
          - name: support.function.task.Jar.gradle
            match: source
          - name: support.function.task.Jar.gradle
            match: version
          - name: support.function.task.Jar.gradle
            match: eachFile
          - name: support.function.task.Jar.gradle
            match: exclude
          - name: support.function.task.Jar.gradle
            match: expand
          - name: support.function.task.Jar.gradle
            match: filesMatching
          - name: support.function.task.Jar.gradle
            match: filesNotMatching
          - name: support.function.task.Jar.gradle
            match: filter
          - name: support.function.task.Jar.gradle
            match: from
          - name: support.function.task.Jar.gradle
            match: include
          - name: support.function.task.Jar.gradle
            match: into
          - name: support.function.task.Jar.gradle
            match: metaInf
          - name: support.function.task.Jar.gradle
            match: rename
          - name: support.function.task.Jar.gradle
            match: with
          - include: source.groovy

      - name: JavaCompile.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: JavaCompile.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'JavaCompile.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.JavaCompile.gradle
            match: classpath
          - name: support.function.task.JavaCompile.gradle
            match: destinationDir
          - name: support.function.task.JavaCompile.gradle
            match: excludes
          - name: support.function.task.JavaCompile.gradle
            match: includes
          - name: support.function.task.JavaCompile.gradle
            match: options
          - name: support.function.task.JavaCompile.gradle
            match: source
          - name: support.function.task.JavaCompile.gradle
            match: sourceCompatibility
          - name: support.function.task.JavaCompile.gradle
            match: targetCompatibility
          - name: support.function.task.JavaCompile.gradle
            match: exclude
          - name: support.function.task.JavaCompile.gradle
            match: include
          - include: source.groovy

      - name: Javadoc.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Javadoc.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Javadoc.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Javadoc.gradle
            match: classpath
          - name: support.function.task.Javadoc.gradle
            match: destinationDir
          - name: support.function.task.Javadoc.gradle
            match: excludes
          - name: support.function.task.Javadoc.gradle
            match: executable
          - name: support.function.task.Javadoc.gradle
            match: failOnError
          - name: support.function.task.Javadoc.gradle
            match: includes
          - name: support.function.task.Javadoc.gradle
            match: maxMemory
          - name: support.function.task.Javadoc.gradle
            match: options
          - name: support.function.task.Javadoc.gradle
            match: source
          - name: support.function.task.Javadoc.gradle
            match: title
          - name: support.function.task.Javadoc.gradle
            match: exclude
          - name: support.function.task.Javadoc.gradle
            match: include
          - include: source.groovy

      - name: JavaExec.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: JavaExec.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'JavaExec.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.JavaExec.gradle
            match: allJvmArgs
          - name: support.function.task.JavaExec.gradle
            match: args
          - name: support.function.task.JavaExec.gradle
            match: bootstrapClasspath
          - name: support.function.task.JavaExec.gradle
            match: classpath
          - name: support.function.task.JavaExec.gradle
            match: commandLine
          - name: support.function.task.JavaExec.gradle
            match: debug
          - name: support.function.task.JavaExec.gradle
            match: enableAssertions
          - name: support.function.task.JavaExec.gradle
            match: environment
          - name: support.function.task.JavaExec.gradle
            match: errorOutput
          - name: support.function.task.JavaExec.gradle
            match: executable
          - name: support.function.task.JavaExec.gradle
            match: ignoreExitValue
          - name: support.function.task.JavaExec.gradle
            match: jvmArgs
          - name: support.function.task.JavaExec.gradle
            match: main
          - name: support.function.task.JavaExec.gradle
            match: maxHeapSize
          - name: support.function.task.JavaExec.gradle
            match: standardInput
          - name: support.function.task.JavaExec.gradle
            match: standardOutput
          - name: support.function.task.JavaExec.gradle
            match: systemProperties
          - name: support.function.task.JavaExec.gradle
            match: workingDir
          - name: support.function.task.JavaExec.gradle
            match: copyTo
          - include: source.groovy

      - name: JDepend.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: JDepend.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'JDepend.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.JDepend.gradle
            match: classesDir
          - name: support.function.task.JDepend.gradle
            match: jdependClasspath
          - name: support.function.task.JDepend.gradle
            match: reports
          - include: source.groovy

      - name: JettyRun.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: JettyRun.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'JettyRun.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.JettyRun.gradle
            match: additionalRuntimeJars
          - name: support.function.task.JettyRun.gradle
            match: classpath
          - name: support.function.task.JettyRun.gradle
            match: contextPath
          - name: support.function.task.JettyRun.gradle
            match: daemon
          - name: support.function.task.JettyRun.gradle
            match: httpPort
          - name: support.function.task.JettyRun.gradle
            match: jettyConfig
          - name: support.function.task.JettyRun.gradle
            match: reload
          - name: support.function.task.JettyRun.gradle
            match: scanIntervalSeconds
          - name: support.function.task.JettyRun.gradle
            match: stopKey
          - name: support.function.task.JettyRun.gradle
            match: stopPort
          - name: support.function.task.JettyRun.gradle
            match: webAppSourceDirectory
          - name: support.function.task.JettyRun.gradle
            match: webXml
          - include: source.groovy

      - name: JettyRunWar.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: JettyRunWar.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'JettyRunWar.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.JettyRunWar.gradle
            match: additionalRuntimeJars
          - name: support.function.task.JettyRunWar.gradle
            match: contextPath
          - name: support.function.task.JettyRunWar.gradle
            match: daemon
          - name: support.function.task.JettyRunWar.gradle
            match: httpPort
          - name: support.function.task.JettyRunWar.gradle
            match: jettyConfig
          - name: support.function.task.JettyRunWar.gradle
            match: reload
          - name: support.function.task.JettyRunWar.gradle
            match: scanIntervalSeconds
          - name: support.function.task.JettyRunWar.gradle
            match: stopKey
          - name: support.function.task.JettyRunWar.gradle
            match: stopPort
          - name: support.function.task.JettyRunWar.gradle
            match: webApp
          - include: source.groovy

      - name: JettyStop.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: JettyStop.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'JettyStop.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.JettyStop.gradle
            match: stopKey
          - name: support.function.task.JettyStop.gradle
            match: stopPort
          - include: source.groovy

      - name: Pmd.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Pmd.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Pmd.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Pmd.gradle
            match: excludes
          - name: support.function.task.Pmd.gradle
            match: ignoreFailures
          - name: support.function.task.Pmd.gradle
            match: includes
          - name: support.function.task.Pmd.gradle
            match: pmdClasspath
          - name: support.function.task.Pmd.gradle
            match: reports
          - name: support.function.task.Pmd.gradle
            match: ruleSetFiles
          - name: support.function.task.Pmd.gradle
            match: ruleSets
          - name: support.function.task.Pmd.gradle
            match: source
          - name: support.function.task.Pmd.gradle
            match: targetJdk
          - name: support.function.task.Pmd.gradle
            match: exclude
          - name: support.function.task.Pmd.gradle
            match: include
          - include: source.groovy

      - name: PublishToIvyRepository.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: PublishToIvyRepository.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'PublishToIvyRepository.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.PublishToIvyRepository.gradle
            match: publication
          - name: support.function.task.PublishToIvyRepository.gradle
            match: repository
          - include: source.groovy

      - name: PublishToMavenRepository.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: PublishToMavenRepository.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'PublishToMavenRepository.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.PublishToMavenRepository.gradle
            match: publication
          - name: support.function.task.PublishToMavenRepository.gradle
            match: repository
          - include: source.groovy

      - name: ScalaCompile.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ScalaCompile.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ScalaCompile.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ScalaCompile.gradle
            match: classpath
          - name: support.function.task.ScalaCompile.gradle
            match: destinationDir
          - name: support.function.task.ScalaCompile.gradle
            match: excludes
          - name: support.function.task.ScalaCompile.gradle
            match: includes
          - name: support.function.task.ScalaCompile.gradle
            match: options
          - name: support.function.task.ScalaCompile.gradle
            match: scalaClasspath
          - name: support.function.task.ScalaCompile.gradle
            match: scalaCompileOptions
          - name: support.function.task.ScalaCompile.gradle
            match: source
          - name: support.function.task.ScalaCompile.gradle
            match: sourceCompatibility
          - name: support.function.task.ScalaCompile.gradle
            match: targetCompatibility
          - name: support.function.task.ScalaCompile.gradle
            match: exclude
          - name: support.function.task.ScalaCompile.gradle
            match: include
          - include: source.groovy

      - name: ScalaDoc.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: ScalaDoc.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'ScalaDoc.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.ScalaDoc.gradle
            match: classpath
          - name: support.function.task.ScalaDoc.gradle
            match: destinationDir
          - name: support.function.task.ScalaDoc.gradle
            match: excludes
          - name: support.function.task.ScalaDoc.gradle
            match: includes
          - name: support.function.task.ScalaDoc.gradle
            match: scalaClasspath
          - name: support.function.task.ScalaDoc.gradle
            match: scalaDocOptions
          - name: support.function.task.ScalaDoc.gradle
            match: source
          - name: support.function.task.ScalaDoc.gradle
            match: title
          - name: support.function.task.ScalaDoc.gradle
            match: exclude
          - name: support.function.task.ScalaDoc.gradle
            match: include
          - include: source.groovy

      - name: SonarAnalyze.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: SonarAnalyze.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'SonarAnalyze.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.SonarAnalyze.gradle
            match: rootModel
          - include: source.groovy

      - name: Sync.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Sync.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Sync.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Sync.gradle
            match: caseSensitive
          - name: support.function.task.Sync.gradle
            match: destinationDir
          - name: support.function.task.Sync.gradle
            match: dirMode
          - name: support.function.task.Sync.gradle
            match: duplicatesStrategy
          - name: support.function.task.Sync.gradle
            match: excludes
          - name: support.function.task.Sync.gradle
            match: fileMode
          - name: support.function.task.Sync.gradle
            match: includeEmptyDirs
          - name: support.function.task.Sync.gradle
            match: includes
          - name: support.function.task.Sync.gradle
            match: source
          - name: support.function.task.Sync.gradle
            match: eachFile
          - name: support.function.task.Sync.gradle
            match: exclude
          - name: support.function.task.Sync.gradle
            match: expand
          - name: support.function.task.Sync.gradle
            match: filesMatching
          - name: support.function.task.Sync.gradle
            match: filesNotMatching
          - name: support.function.task.Sync.gradle
            match: filter
          - name: support.function.task.Sync.gradle
            match: from
          - name: support.function.task.Sync.gradle
            match: include
          - name: support.function.task.Sync.gradle
            match: into
          - name: support.function.task.Sync.gradle
            match: rename
          - name: support.function.task.Sync.gradle
            match: with
          - include: source.groovy

      - name: Tar.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Tar.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Tar.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Tar.gradle
            match: appendix
          - name: support.function.task.Tar.gradle
            match: archiveName
          - name: support.function.task.Tar.gradle
            match: archivePath
          - name: support.function.task.Tar.gradle
            match: baseName
          - name: support.function.task.Tar.gradle
            match: caseSensitive
          - name: support.function.task.Tar.gradle
            match: classifier
          - name: support.function.task.Tar.gradle
            match: compression
          - name: support.function.task.Tar.gradle
            match: destinationDir
          - name: support.function.task.Tar.gradle
            match: dirMode
          - name: support.function.task.Tar.gradle
            match: duplicatesStrategy
          - name: support.function.task.Tar.gradle
            match: excludes
          - name: support.function.task.Tar.gradle
            match: extension
          - name: support.function.task.Tar.gradle
            match: fileMode
          - name: support.function.task.Tar.gradle
            match: includeEmptyDirs
          - name: support.function.task.Tar.gradle
            match: includes
          - name: support.function.task.Tar.gradle
            match: source
          - name: support.function.task.Tar.gradle
            match: version
          - name: support.function.task.Tar.gradle
            match: eachFile
          - name: support.function.task.Tar.gradle
            match: exclude
          - name: support.function.task.Tar.gradle
            match: expand
          - name: support.function.task.Tar.gradle
            match: filesMatching
          - name: support.function.task.Tar.gradle
            match: filesNotMatching
          - name: support.function.task.Tar.gradle
            match: filter
          - name: support.function.task.Tar.gradle
            match: from
          - name: support.function.task.Tar.gradle
            match: include
          - name: support.function.task.Tar.gradle
            match: into
          - name: support.function.task.Tar.gradle
            match: rename
          - name: support.function.task.Tar.gradle
            match: with
          - include: source.groovy

      - name: Test.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Test.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Test.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Test.gradle
            match: allJvmArgs
          - name: support.function.task.Test.gradle
            match: binResultsDir
          - name: support.function.task.Test.gradle
            match: bootstrapClasspath
          - name: support.function.task.Test.gradle
            match: classpath
          - name: support.function.task.Test.gradle
            match: debug
          - name: support.function.task.Test.gradle
            match: enableAssertions
          - name: support.function.task.Test.gradle
            match: environment
          - name: support.function.task.Test.gradle
            match: excludes
          - name: support.function.task.Test.gradle
            match: executable
          - name: support.function.task.Test.gradle
            match: forkEvery
          - name: support.function.task.Test.gradle
            match: ignoreFailures
          - name: support.function.task.Test.gradle
            match: includes
          - name: support.function.task.Test.gradle
            match: jvmArgs
          - name: support.function.task.Test.gradle
            match: maxHeapSize
          - name: support.function.task.Test.gradle
            match: maxParallelForks
          - name: support.function.task.Test.gradle
            match: minHeapSize
          - name: support.function.task.Test.gradle
            match: options
          - name: support.function.task.Test.gradle
            match: reports
          - name: support.function.task.Test.gradle
            match: scanForTestClasses
          - name: support.function.task.Test.gradle
            match: systemProperties
          - name: support.function.task.Test.gradle
            match: testClassesDir
          - name: support.function.task.Test.gradle
            match: testLogging
          - name: support.function.task.Test.gradle
            match: testReport
          - name: support.function.task.Test.gradle
            match: testReportDir
          - name: support.function.task.Test.gradle
            match: testResultsDir
          - name: support.function.task.Test.gradle
            match: testSrcDirs
          - name: support.function.task.Test.gradle
            match: workingDir
          - name: support.function.task.Test.gradle
            match: jacoco
          - name: support.function.task.Test.gradle
            match: addTestListener
          - name: support.function.task.Test.gradle
            match: addTestOutputListener
          - name: support.function.task.Test.gradle
            match: afterSuite
          - name: support.function.task.Test.gradle
            match: afterTest
          - name: support.function.task.Test.gradle
            match: beforeSuite
          - name: support.function.task.Test.gradle
            match: beforeTest
          - name: support.function.task.Test.gradle
            match: copyTo
          - name: support.function.task.Test.gradle
            match: exclude
          - name: support.function.task.Test.gradle
            match: include
          - name: support.function.task.Test.gradle
            match: onOutput
          - name: support.function.task.Test.gradle
            match: removeTestListener
          - name: support.function.task.Test.gradle
            match: removeTestOutputListener
          - name: support.function.task.Test.gradle
            match: useJUnit
          - name: support.function.task.Test.gradle
            match: useTestNG
          - include: source.groovy

      - name: TestReport.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: TestReport.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'TestReport.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.TestReport.gradle
            match: destinationDir
          - name: support.function.task.TestReport.gradle
            match: testResultDirs
          - name: support.function.task.TestReport.gradle
            match: reportOn
          - include: source.groovy

      - name: Upload.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Upload.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Upload.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Upload.gradle
            match: artifacts
          - name: support.function.task.Upload.gradle
            match: configuration
          - name: support.function.task.Upload.gradle
            match: repositories
          - name: support.function.task.Upload.gradle
            match: uploadDescriptor
          - include: source.groovy

      - name: War.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: War.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'War.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.War.gradle
            match: appendix
          - name: support.function.task.War.gradle
            match: archiveName
          - name: support.function.task.War.gradle
            match: archivePath
          - name: support.function.task.War.gradle
            match: baseName
          - name: support.function.task.War.gradle
            match: caseSensitive
          - name: support.function.task.War.gradle
            match: classifier
          - name: support.function.task.War.gradle
            match: classpath
          - name: support.function.task.War.gradle
            match: destinationDir
          - name: support.function.task.War.gradle
            match: dirMode
          - name: support.function.task.War.gradle
            match: duplicatesStrategy
          - name: support.function.task.War.gradle
            match: entryCompression
          - name: support.function.task.War.gradle
            match: excludes
          - name: support.function.task.War.gradle
            match: extension
          - name: support.function.task.War.gradle
            match: fileMode
          - name: support.function.task.War.gradle
            match: includeEmptyDirs
          - name: support.function.task.War.gradle
            match: includes
          - name: support.function.task.War.gradle
            match: manifest
          - name: support.function.task.War.gradle
            match: source
          - name: support.function.task.War.gradle
            match: version
          - name: support.function.task.War.gradle
            match: webXml
          - name: support.function.task.War.gradle
            match: eachFile
          - name: support.function.task.War.gradle
            match: exclude
          - name: support.function.task.War.gradle
            match: expand
          - name: support.function.task.War.gradle
            match: filesMatching
          - name: support.function.task.War.gradle
            match: filesNotMatching
          - name: support.function.task.War.gradle
            match: filter
          - name: support.function.task.War.gradle
            match: from
          - name: support.function.task.War.gradle
            match: include
          - name: support.function.task.War.gradle
            match: into
          - name: support.function.task.War.gradle
            match: metaInf
          - name: support.function.task.War.gradle
            match: rename
          - name: support.function.task.War.gradle
            match: webInf
          - name: support.function.task.War.gradle
            match: with
          - include: source.groovy

      - name: Wrapper.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Wrapper.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Wrapper.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Wrapper.gradle
            match: archiveBase
          - name: support.function.task.Wrapper.gradle
            match: archivePath
          - name: support.function.task.Wrapper.gradle
            match: distributionBase
          - name: support.function.task.Wrapper.gradle
            match: distributionPath
          - name: support.function.task.Wrapper.gradle
            match: distributionUrl
          - name: support.function.task.Wrapper.gradle
            match: gradleVersion
          - name: support.function.task.Wrapper.gradle
            match: jarFile
          - name: support.function.task.Wrapper.gradle
            match: propertiesFile
          - name: support.function.task.Wrapper.gradle
            match: scriptFile
          - include: source.groovy

      - name: Zip.task.source.gradle
        begin: '\s*(task)\s+(\w+)\s*\(.*type: Zip.*\)\s*{'
        beginCaptures:
          '1': {name: keyword.task.source.gradle}
          '2': {name: entity.name.function}
        end: '}'
        contentName: 'Zip.tasks.body.source.gradle'
        patterns:
          - include: '#project-patterns'
          - name: support.function.task.Zip.gradle
            match: appendix
          - name: support.function.task.Zip.gradle
            match: archiveName
          - name: support.function.task.Zip.gradle
            match: archivePath
          - name: support.function.task.Zip.gradle
            match: baseName
          - name: support.function.task.Zip.gradle
            match: caseSensitive
          - name: support.function.task.Zip.gradle
            match: classifier
          - name: support.function.task.Zip.gradle
            match: destinationDir
          - name: support.function.task.Zip.gradle
            match: dirMode
          - name: support.function.task.Zip.gradle
            match: duplicatesStrategy
          - name: support.function.task.Zip.gradle
            match: entryCompression
          - name: support.function.task.Zip.gradle
            match: excludes
          - name: support.function.task.Zip.gradle
            match: extension
          - name: support.function.task.Zip.gradle
            match: fileMode
          - name: support.function.task.Zip.gradle
            match: includeEmptyDirs
          - name: support.function.task.Zip.gradle
            match: includes
          - name: support.function.task.Zip.gradle
            match: source
          - name: support.function.task.Zip.gradle
            match: version
          - name: support.function.task.Zip.gradle
            match: eachFile
          - name: support.function.task.Zip.gradle
            match: exclude
          - name: support.function.task.Zip.gradle
            match: expand
          - name: support.function.task.Zip.gradle
            match: filesMatching
          - name: support.function.task.Zip.gradle
            match: filesNotMatching
          - name: support.function.task.Zip.gradle
            match: filter
          - name: support.function.task.Zip.gradle
            match: from
          - name: support.function.task.Zip.gradle
            match: include
          - name: support.function.task.Zip.gradle
            match: into
          - name: support.function.task.Zip.gradle
            match: rename
          - name: support.function.task.Zip.gradle
            match: with
          - include: source.groovy


...