# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Gradle
scopeName: source.gradle
fileTypes: ["gradle"]
uuid: b5741d4f-485d-4bca-9a5b-6a1ec2a5a272

patterns:
  - include: '#auto-generated-tasks'
  - include: source.groovy

repository:
  auto-generated-tasks:
    patterns:
    - name: Project.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Project.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'Project.body.source.gradle'
      patterns:
        - name: support.function.task.Project.gradle
          match: allprojects
        - name: support.function.task.Project.gradle
          match: ant
        - name: support.function.task.Project.gradle
          match: artifacts
        - name: support.function.task.Project.gradle
          match: buildDir
        - name: support.function.task.Project.gradle
          match: buildFile
        - name: support.function.task.Project.gradle
          match: buildscript
        - name: support.function.task.Project.gradle
          match: childProjects
        - name: support.function.task.Project.gradle
          match: configurations
        - name: support.function.task.Project.gradle
          match: convention
        - name: support.function.task.Project.gradle
          match: defaultTasks
        - name: support.function.task.Project.gradle
          match: dependencies
        - name: support.function.task.Project.gradle
          match: dependsOnProjects
        - name: support.function.task.Project.gradle
          match: description
        - name: support.function.task.Project.gradle
          match: extensions
        - name: support.function.task.Project.gradle
          match: gradle
        - name: support.function.task.Project.gradle
          match: group
        - name: support.function.task.Project.gradle
          match: logger
        - name: support.function.task.Project.gradle
          match: logging
        - name: support.function.task.Project.gradle
          match: name
        - name: support.function.task.Project.gradle
          match: parent
        - name: support.function.task.Project.gradle
          match: path
        - name: support.function.task.Project.gradle
          match: plugins
        - name: support.function.task.Project.gradle
          match: project
        - name: support.function.task.Project.gradle
          match: projectDir
        - name: support.function.task.Project.gradle
          match: properties
        - name: support.function.task.Project.gradle
          match: repositories
        - name: support.function.task.Project.gradle
          match: resources
        - name: support.function.task.Project.gradle
          match: rootDir
        - name: support.function.task.Project.gradle
          match: rootProject
        - name: support.function.task.Project.gradle
          match: state
        - name: support.function.task.Project.gradle
          match: status
        - name: support.function.task.Project.gradle
          match: subprojects
        - name: support.function.task.Project.gradle
          match: tasks
        - name: support.function.task.Project.gradle
          match: version
        - name: support.function.task.Project.gradle
          match: binaries
        - name: support.function.task.Project.gradle
          match: sources
        - name: support.function.task.Project.gradle
          match: announce
        - name: support.function.task.Project.gradle
          match: applicationDefaultJvmArgs
        - name: support.function.task.Project.gradle
          match: applicationDistribution
        - name: support.function.task.Project.gradle
          match: applicationName
        - name: support.function.task.Project.gradle
          match: mainClassName
        - name: support.function.task.Project.gradle
          match: checkstyle
        - name: support.function.task.Project.gradle
          match: checkstyleConfigFile
        - name: support.function.task.Project.gradle
          match: checkstyleConfigFileName
        - name: support.function.task.Project.gradle
          match: checkstyleProperties
        - name: support.function.task.Project.gradle
          match: checkstyleResultsDir
        - name: support.function.task.Project.gradle
          match: checkstyleResultsDirName
        - name: support.function.task.Project.gradle
          match: codeNarcConfigFile
        - name: support.function.task.Project.gradle
          match: codeNarcConfigFileName
        - name: support.function.task.Project.gradle
          match: codeNarcReportsDir
        - name: support.function.task.Project.gradle
          match: codeNarcReportsDirName
        - name: support.function.task.Project.gradle
          match: codenarc
        - name: support.function.task.Project.gradle
          match: distributions
        - name: support.function.task.Project.gradle
          match: appDirName
        - name: support.function.task.Project.gradle
          match: deploymentDescriptor
        - name: support.function.task.Project.gradle
          match: libDirName
        - name: support.function.task.Project.gradle
          match: eclipse
        - name: support.function.task.Project.gradle
          match: findbugs
        - name: support.function.task.Project.gradle
          match: idea
        - name: support.function.task.Project.gradle
          match: jacoco
        - name: support.function.task.Project.gradle
          match: apiDocTitle
        - name: support.function.task.Project.gradle
          match: archivesBaseName
        - name: support.function.task.Project.gradle
          match: distsDir
        - name: support.function.task.Project.gradle
          match: distsDirName
        - name: support.function.task.Project.gradle
          match: docsDir
        - name: support.function.task.Project.gradle
          match: docsDirName
        - name: support.function.task.Project.gradle
          match: libsDir
        - name: support.function.task.Project.gradle
          match: libsDirName
        - name: support.function.task.Project.gradle
          match: reportsDir
        - name: support.function.task.Project.gradle
          match: reportsDirName
        - name: support.function.task.Project.gradle
          match: sourceCompatibility
        - name: support.function.task.Project.gradle
          match: sourceSets
        - name: support.function.task.Project.gradle
          match: targetCompatibility
        - name: support.function.task.Project.gradle
          match: testReportDir
        - name: support.function.task.Project.gradle
          match: testReportDirName
        - name: support.function.task.Project.gradle
          match: testResultsDir
        - name: support.function.task.Project.gradle
          match: testResultsDirName
        - name: support.function.task.Project.gradle
          match: jdepend
        - name: support.function.task.Project.gradle
          match: httpPort
        - name: support.function.task.Project.gradle
          match: stopKey
        - name: support.function.task.Project.gradle
          match: stopPort
        - name: support.function.task.Project.gradle
          match: conf2ScopeMappings
        - name: support.function.task.Project.gradle
          match: mavenPomDir
        - name: support.function.task.Project.gradle
          match: buildTypes
        - name: support.function.task.Project.gradle
          match: executables
        - name: support.function.task.Project.gradle
          match: flavors
        - name: support.function.task.Project.gradle
          match: libraries
        - name: support.function.task.Project.gradle
          match: platforms
        - name: support.function.task.Project.gradle
          match: toolChains
        - name: support.function.task.Project.gradle
          match: pmd
        - name: support.function.task.Project.gradle
          match: projectReportDir
        - name: support.function.task.Project.gradle
          match: projectReportDirName
        - name: support.function.task.Project.gradle
          match: publishing
        - name: support.function.task.Project.gradle
          match: signing
        - name: support.function.task.Project.gradle
          match: visualStudio
        - name: support.function.task.Project.gradle
          match: webAppDir
        - name: support.function.task.Project.gradle
          match: webAppDirName
        - name: support.function.task.Project.gradle
          match: absoluteProjectPath
        - name: support.function.task.Project.gradle
          match: afterEvaluate
        - name: support.function.task.Project.gradle
          match: apply
        - name: support.function.task.Project.gradle
          match: beforeEvaluate
        - name: support.function.task.Project.gradle
          match: childrenDependOnMe
        - name: support.function.task.Project.gradle
          match: configure
        - name: support.function.task.Project.gradle
          match: container
        - name: support.function.task.Project.gradle
          match: copy
        - name: support.function.task.Project.gradle
          match: copySpec
        - name: support.function.task.Project.gradle
          match: delete
        - name: support.function.task.Project.gradle
          match: dependsOn
        - name: support.function.task.Project.gradle
          match: dependsOnChildren
        - name: support.function.task.Project.gradle
          match: evaluationDependsOn
        - name: support.function.task.Project.gradle
          match: exec
        - name: support.function.task.Project.gradle
          match: file
        - name: support.function.task.Project.gradle
          match: fileTree
        - name: support.function.task.Project.gradle
          match: files
        - name: support.function.task.Project.gradle
          match: findProject
        - name: support.function.task.Project.gradle
          match: getAllTasks
        - name: support.function.task.Project.gradle
          match: getTasksByName
        - name: support.function.task.Project.gradle
          match: hasProperty
        - name: support.function.task.Project.gradle
          match: javaexec
        - name: support.function.task.Project.gradle
          match: mkdir
        - name: support.function.task.Project.gradle
          match: property
        - name: support.function.task.Project.gradle
          match: relativePath
        - name: support.function.task.Project.gradle
          match: relativeProjectPath
        - name: support.function.task.Project.gradle
          match: setProperty
        - name: support.function.task.Project.gradle
          match: tarTree
        - name: support.function.task.Project.gradle
          match: task
        - name: support.function.task.Project.gradle
          match: uri
        - name: support.function.task.Project.gradle
          match: zipTree
        - name: support.function.task.Project.gradle
          match: manifest
        - name: support.function.task.Project.gradle
          match: pom
        - name: support.function.task.Project.gradle
          match: osgiManifest
        - include: source.groovy

    - name: Task.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Task.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'Task.body.source.gradle'
      patterns:
        - name: support.function.task.Task.gradle
          match: actions
        - name: support.function.task.Task.gradle
          match: ant
        - name: support.function.task.Task.gradle
          match: convention
        - name: support.function.task.Task.gradle
          match: dependsOn
        - name: support.function.task.Task.gradle
          match: description
        - name: support.function.task.Task.gradle
          match: didWork
        - name: support.function.task.Task.gradle
          match: enabled
        - name: support.function.task.Task.gradle
          match: extensions
        - name: support.function.task.Task.gradle
          match: finalizedBy
        - name: support.function.task.Task.gradle
          match: group
        - name: support.function.task.Task.gradle
          match: inputs
        - name: support.function.task.Task.gradle
          match: logger
        - name: support.function.task.Task.gradle
          match: logging
        - name: support.function.task.Task.gradle
          match: mustRunAfter
        - name: support.function.task.Task.gradle
          match: name
        - name: support.function.task.Task.gradle
          match: outputs
        - name: support.function.task.Task.gradle
          match: path
        - name: support.function.task.Task.gradle
          match: project
        - name: support.function.task.Task.gradle
          match: state
        - name: support.function.task.Task.gradle
          match: taskDependencies
        - name: support.function.task.Task.gradle
          match: temporaryDir
        - name: support.function.task.Task.gradle
          match: deleteAllActions
        - name: support.function.task.Task.gradle
          match: doFirst
        - name: support.function.task.Task.gradle
          match: doLast
        - name: support.function.task.Task.gradle
          match: hasProperty
        - name: support.function.task.Task.gradle
          match: leftShift
        - name: support.function.task.Task.gradle
          match: onlyIf
        - name: support.function.task.Task.gradle
          match: property
        - name: support.function.task.Task.gradle
          match: setProperty
        - include: source.groovy

    - name: invocation.Gradle.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: invocation.Gradle.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'invocation.Gradle.body.source.gradle'
      patterns:
        - name: support.function.task.invocation.Gradle.gradle
          match: gradle
        - name: support.function.task.invocation.Gradle.gradle
          match: gradleHomeDir
        - name: support.function.task.invocation.Gradle.gradle
          match: gradleUserHomeDir
        - name: support.function.task.invocation.Gradle.gradle
          match: gradleVersion
        - name: support.function.task.invocation.Gradle.gradle
          match: parent
        - name: support.function.task.invocation.Gradle.gradle
          match: rootProject
        - name: support.function.task.invocation.Gradle.gradle
          match: startParameter
        - name: support.function.task.invocation.Gradle.gradle
          match: taskGraph
        - name: support.function.task.invocation.Gradle.gradle
          match: addBuildListener
        - name: support.function.task.invocation.Gradle.gradle
          match: addListener
        - name: support.function.task.invocation.Gradle.gradle
          match: addProjectEvaluationListener
        - name: support.function.task.invocation.Gradle.gradle
          match: afterProject
        - name: support.function.task.invocation.Gradle.gradle
          match: allprojects
        - name: support.function.task.invocation.Gradle.gradle
          match: beforeProject
        - name: support.function.task.invocation.Gradle.gradle
          match: buildFinished
        - name: support.function.task.invocation.Gradle.gradle
          match: projectsEvaluated
        - name: support.function.task.invocation.Gradle.gradle
          match: projectsLoaded
        - name: support.function.task.invocation.Gradle.gradle
          match: removeListener
        - name: support.function.task.invocation.Gradle.gradle
          match: removeProjectEvaluationListener
        - name: support.function.task.invocation.Gradle.gradle
          match: settingsEvaluated
        - name: support.function.task.invocation.Gradle.gradle
          match: useLogger
        - include: source.groovy

    - name: initialization.Settings.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: initialization.Settings.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'initialization.Settings.body.source.gradle'
      patterns:
        - name: support.function.task.initialization.Settings.gradle
          match: gradle
        - name: support.function.task.initialization.Settings.gradle
          match: rootDir
        - name: support.function.task.initialization.Settings.gradle
          match: rootProject
        - name: support.function.task.initialization.Settings.gradle
          match: settings
        - name: support.function.task.initialization.Settings.gradle
          match: settingsDir
        - name: support.function.task.initialization.Settings.gradle
          match: startParameter
        - name: support.function.task.initialization.Settings.gradle
          match: findProject
        - name: support.function.task.initialization.Settings.gradle
          match: include
        - name: support.function.task.initialization.Settings.gradle
          match: includeFlat
        - name: support.function.task.initialization.Settings.gradle
          match: project
        - include: source.groovy

    - name: Script.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Script.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'Script.body.source.gradle'
      patterns:
        - name: support.function.task.Script.gradle
          match: buildscript
        - name: support.function.task.Script.gradle
          match: logger
        - name: support.function.task.Script.gradle
          match: logging
        - name: support.function.task.Script.gradle
          match: resources
        - name: support.function.task.Script.gradle
          match: apply
        - name: support.function.task.Script.gradle
          match: copy
        - name: support.function.task.Script.gradle
          match: copySpec
        - name: support.function.task.Script.gradle
          match: delete
        - name: support.function.task.Script.gradle
          match: exec
        - name: support.function.task.Script.gradle
          match: file
        - name: support.function.task.Script.gradle
          match: fileTree
        - name: support.function.task.Script.gradle
          match: files
        - name: support.function.task.Script.gradle
          match: javaexec
        - name: support.function.task.Script.gradle
          match: mkdir
        - name: support.function.task.Script.gradle
          match: relativePath
        - name: support.function.task.Script.gradle
          match: tarTree
        - name: support.function.task.Script.gradle
          match: uri
        - name: support.function.task.Script.gradle
          match: zipTree
        - include: source.groovy

    - name: SourceSet.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: SourceSet.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.SourceSet.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.SourceSet.gradle
          match: allJava
        - name: support.function.task.tasks.SourceSet.gradle
          match: allSource
        - name: support.function.task.tasks.SourceSet.gradle
          match: compileClasspath
        - name: support.function.task.tasks.SourceSet.gradle
          match: java
        - name: support.function.task.tasks.SourceSet.gradle
          match: name
        - name: support.function.task.tasks.SourceSet.gradle
          match: output
        - name: support.function.task.tasks.SourceSet.gradle
          match: resources
        - name: support.function.task.tasks.SourceSet.gradle
          match: runtimeClasspath
        - name: support.function.task.tasks.SourceSet.gradle
          match: antlr
        - name: support.function.task.tasks.SourceSet.gradle
          match: allGroovy
        - name: support.function.task.tasks.SourceSet.gradle
          match: groovy
        - name: support.function.task.tasks.SourceSet.gradle
          match: allScala
        - name: support.function.task.tasks.SourceSet.gradle
          match: scala
        - name: support.function.task.tasks.SourceSet.gradle
          match: compiledBy
        - name: support.function.task.tasks.SourceSet.gradle
          match: getCompileTaskName
        - name: support.function.task.tasks.SourceSet.gradle
          match: getTaskName
        - include: source.groovy

    - name: SourceSetOutput.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: SourceSetOutput.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.SourceSetOutput.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.SourceSetOutput.gradle
          match: classesDir
        - name: support.function.task.tasks.SourceSetOutput.gradle
          match: resourcesDir
        - name: support.function.task.tasks.SourceSetOutput.gradle
          match: dir
        - name: support.function.task.tasks.SourceSetOutput.gradle
          match: getDirs
        - include: source.groovy

    - name: incremental.IncrementalTaskInputs.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: incremental.IncrementalTaskInputs.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.incremental.IncrementalTaskInputs.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.incremental.IncrementalTaskInputs.gradle
          match: incremental
        - name: support.function.task.tasks.incremental.IncrementalTaskInputs.gradle
          match: outOfDate
        - name: support.function.task.tasks.incremental.IncrementalTaskInputs.gradle
          match: removed
        - include: source.groovy

    - name: artifacts.Configuration.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: artifacts.Configuration.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'artifacts.Configuration.body.source.gradle'
      patterns:
        - name: support.function.task.artifacts.Configuration.gradle
          match: allArtifacts
        - name: support.function.task.artifacts.Configuration.gradle
          match: allDependencies
        - name: support.function.task.artifacts.Configuration.gradle
          match: artifacts
        - name: support.function.task.artifacts.Configuration.gradle
          match: buildDependencies
        - name: support.function.task.artifacts.Configuration.gradle
          match: dependencies
        - name: support.function.task.artifacts.Configuration.gradle
          match: description
        - name: support.function.task.artifacts.Configuration.gradle
          match: excludeRules
        - name: support.function.task.artifacts.Configuration.gradle
          match: extendsFrom
        - name: support.function.task.artifacts.Configuration.gradle
          match: hierarchy
        - name: support.function.task.artifacts.Configuration.gradle
          match: incoming
        - name: support.function.task.artifacts.Configuration.gradle
          match: name
        - name: support.function.task.artifacts.Configuration.gradle
          match: resolutionStrategy
        - name: support.function.task.artifacts.Configuration.gradle
          match: resolvedConfiguration
        - name: support.function.task.artifacts.Configuration.gradle
          match: state
        - name: support.function.task.artifacts.Configuration.gradle
          match: transitive
        - name: support.function.task.artifacts.Configuration.gradle
          match: visible
        - name: support.function.task.artifacts.Configuration.gradle
          match: copy
        - name: support.function.task.artifacts.Configuration.gradle
          match: copyRecursive
        - name: support.function.task.artifacts.Configuration.gradle
          match: exclude
        - name: support.function.task.artifacts.Configuration.gradle
          match: fileCollection
        - name: support.function.task.artifacts.Configuration.gradle
          match: files
        - name: support.function.task.artifacts.Configuration.gradle
          match: getTaskDependencyFromProjectDependency
        - include: source.groovy

    - name: artifacts.ResolutionStrategy.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: artifacts.ResolutionStrategy.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'artifacts.ResolutionStrategy.body.source.gradle'
      patterns:
        - name: support.function.task.artifacts.ResolutionStrategy.gradle
          match: forcedModules
        - name: support.function.task.artifacts.ResolutionStrategy.gradle
          match: cacheChangingModulesFor
        - name: support.function.task.artifacts.ResolutionStrategy.gradle
          match: cacheDynamicVersionsFor
        - name: support.function.task.artifacts.ResolutionStrategy.gradle
          match: eachDependency
        - name: support.function.task.artifacts.ResolutionStrategy.gradle
          match: failOnVersionConflict
        - name: support.function.task.artifacts.ResolutionStrategy.gradle
          match: force
        - include: source.groovy

    - name: dsl.ConventionProperty.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: dsl.ConventionProperty.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'dsl.ConventionProperty.body.source.gradle'
      patterns:
        - include: source.groovy

    - name: plugins.ExtensionAware.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.ExtensionAware.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.ExtensionAware.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.ExtensionAware.gradle
          match: extensions
        - include: source.groovy

    - name: plugins.ExtraPropertiesExtension.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.ExtraPropertiesExtension.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.ExtraPropertiesExtension.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.ExtraPropertiesExtension.gradle
          match: properties
        - name: support.function.task.plugins.ExtraPropertiesExtension.gradle
          match: get
        - name: support.function.task.plugins.ExtraPropertiesExtension.gradle
          match: has
        - name: support.function.task.plugins.ExtraPropertiesExtension.gradle
          match: set
        - include: source.groovy

    - name: publish.PublishingExtension.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.PublishingExtension.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.PublishingExtension.body.source.gradle'
      patterns:
        - name: support.function.task.publish.PublishingExtension.gradle
          match: publications
        - name: support.function.task.publish.PublishingExtension.gradle
          match: repositories
        - include: source.groovy

    - name: reporting.Report.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: reporting.Report.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'reporting.Report.body.source.gradle'
      patterns:
        - name: support.function.task.reporting.Report.gradle
          match: destination
        - name: support.function.task.reporting.Report.gradle
          match: displayName
        - name: support.function.task.reporting.Report.gradle
          match: enabled
        - name: support.function.task.reporting.Report.gradle
          match: name
        - name: support.function.task.reporting.Report.gradle
          match: outputType
        - include: source.groovy

    - name: reporting.Reporting.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: reporting.Reporting.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'reporting.Reporting.body.source.gradle'
      patterns:
        - name: support.function.task.reporting.Reporting.gradle
          match: reports
        - include: source.groovy

    - name: reporting.ReportContainer.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: reporting.ReportContainer.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'reporting.ReportContainer.body.source.gradle'
      patterns:
        - name: support.function.task.reporting.ReportContainer.gradle
          match: enabled
        - include: source.groovy

    - name: reporting.ReportingExtension.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: reporting.ReportingExtension.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'reporting.ReportingExtension.body.source.gradle'
      patterns:
        - name: support.function.task.reporting.ReportingExtension.gradle
          match: baseDir
        - name: support.function.task.reporting.ReportingExtension.gradle
          match: file
        - include: source.groovy

    - name: publish.ivy.IvyPublication.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.ivy.IvyPublication.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.ivy.IvyPublication.body.source.gradle'
      patterns:
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: artifacts
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: configurations
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: descriptor
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: module
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: organisation
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: revision
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: artifact
        - name: support.function.task.publish.ivy.IvyPublication.gradle
          match: from
        - include: source.groovy

    - name: publish.ivy.IvyArtifact.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.ivy.IvyArtifact.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.ivy.IvyArtifact.body.source.gradle'
      patterns:
        - name: support.function.task.publish.ivy.IvyArtifact.gradle
          match: classifier
        - name: support.function.task.publish.ivy.IvyArtifact.gradle
          match: conf
        - name: support.function.task.publish.ivy.IvyArtifact.gradle
          match: extension
        - name: support.function.task.publish.ivy.IvyArtifact.gradle
          match: file
        - name: support.function.task.publish.ivy.IvyArtifact.gradle
          match: name
        - name: support.function.task.publish.ivy.IvyArtifact.gradle
          match: type
        - name: support.function.task.publish.ivy.IvyArtifact.gradle
          match: builtBy
        - include: source.groovy

    - name: publish.ivy.IvyArtifactSet.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.ivy.IvyArtifactSet.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.ivy.IvyArtifactSet.body.source.gradle'
      patterns:
        - name: support.function.task.publish.ivy.IvyArtifactSet.gradle
          match: artifact
        - include: source.groovy

    - name: publish.ivy.IvyModuleDescriptor.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.ivy.IvyModuleDescriptor.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.ivy.IvyModuleDescriptor.body.source.gradle'
      patterns:
        - name: support.function.task.publish.ivy.IvyModuleDescriptor.gradle
          match: withXml
        - include: source.groovy

    - name: publish.maven.MavenPublication.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.maven.MavenPublication.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.maven.MavenPublication.body.source.gradle'
      patterns:
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: artifactId
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: artifacts
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: groupId
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: pom
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: version
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: artifact
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: from
        - name: support.function.task.publish.maven.MavenPublication.gradle
          match: setArtifacts
        - include: source.groovy

    - name: publish.maven.MavenArtifact.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.maven.MavenArtifact.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.maven.MavenArtifact.body.source.gradle'
      patterns:
        - name: support.function.task.publish.maven.MavenArtifact.gradle
          match: classifier
        - name: support.function.task.publish.maven.MavenArtifact.gradle
          match: extension
        - name: support.function.task.publish.maven.MavenArtifact.gradle
          match: file
        - name: support.function.task.publish.maven.MavenArtifact.gradle
          match: builtBy
        - include: source.groovy

    - name: publish.maven.MavenArtifactSet.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.maven.MavenArtifactSet.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.maven.MavenArtifactSet.body.source.gradle'
      patterns:
        - name: support.function.task.publish.maven.MavenArtifactSet.gradle
          match: artifact
        - include: source.groovy

    - name: publish.maven.MavenPom.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.maven.MavenPom.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.maven.MavenPom.body.source.gradle'
      patterns:
        - name: support.function.task.publish.maven.MavenPom.gradle
          match: withXml
        - include: source.groovy

    - name: artifacts.ConfigurationContainer.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: artifacts.ConfigurationContainer.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'artifacts.ConfigurationContainer.body.source.gradle'
      patterns:
        - name: support.function.task.artifacts.ConfigurationContainer.gradle
          match: add
        - name: support.function.task.artifacts.ConfigurationContainer.gradle
          match: detachedConfiguration
        - name: support.function.task.artifacts.ConfigurationContainer.gradle
          match: getAt
        - name: support.function.task.artifacts.ConfigurationContainer.gradle
          match: getByName
        - include: source.groovy

    - name: artifacts.dsl.RepositoryHandler.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: artifacts.dsl.RepositoryHandler.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'artifacts.dsl.RepositoryHandler.body.source.gradle'
      patterns:
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: flatDir
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: ivy
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: jcenter
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: maven
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: mavenCentral
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: mavenLocal
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: mavenRepo
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: mavenDeployer
        - name: support.function.task.artifacts.dsl.RepositoryHandler.gradle
          match: mavenInstaller
        - include: source.groovy

    - name: artifacts.dsl.DependencyHandler.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: artifacts.dsl.DependencyHandler.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'artifacts.dsl.DependencyHandler.body.source.gradle'
      patterns:
        - name: support.function.task.artifacts.dsl.DependencyHandler.gradle
          match: components
        - name: support.function.task.artifacts.dsl.DependencyHandler.gradle
          match: add
        - name: support.function.task.artifacts.dsl.DependencyHandler.gradle
          match: create
        - name: support.function.task.artifacts.dsl.DependencyHandler.gradle
          match: gradleApi
        - name: support.function.task.artifacts.dsl.DependencyHandler.gradle
          match: localGroovy
        - name: support.function.task.artifacts.dsl.DependencyHandler.gradle
          match: module
        - name: support.function.task.artifacts.dsl.DependencyHandler.gradle
          match: project
        - include: source.groovy

    - name: artifacts.dsl.ArtifactHandler.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: artifacts.dsl.ArtifactHandler.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'artifacts.dsl.ArtifactHandler.body.source.gradle'
      patterns:
        - name: support.function.task.artifacts.dsl.ArtifactHandler.gradle
          match: add
        - include: source.groovy

    - name: diagnostics.TaskReportTask.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: diagnostics.TaskReportTask.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.diagnostics.TaskReportTask.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.diagnostics.TaskReportTask.gradle
          match: outputFile
        - name: support.function.task.tasks.diagnostics.TaskReportTask.gradle
          match: projects
        - include: source.groovy

    - name: diagnostics.ProjectReportTask.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: diagnostics.ProjectReportTask.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.diagnostics.ProjectReportTask.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.diagnostics.ProjectReportTask.gradle
          match: outputFile
        - name: support.function.task.tasks.diagnostics.ProjectReportTask.gradle
          match: projects
        - include: source.groovy

    - name: diagnostics.DependencyReportTask.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: diagnostics.DependencyReportTask.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.diagnostics.DependencyReportTask.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.diagnostics.DependencyReportTask.gradle
          match: configurations
        - name: support.function.task.tasks.diagnostics.DependencyReportTask.gradle
          match: outputFile
        - name: support.function.task.tasks.diagnostics.DependencyReportTask.gradle
          match: projects
        - include: source.groovy

    - name: diagnostics.DependencyInsightReportTask.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: diagnostics.DependencyInsightReportTask.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.diagnostics.DependencyInsightReportTask.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.diagnostics.DependencyInsightReportTask.gradle
          match: configuration
        - name: support.function.task.tasks.diagnostics.DependencyInsightReportTask.gradle
          match: dependencySpec
        - include: source.groovy

    - name: diagnostics.PropertyReportTask.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: diagnostics.PropertyReportTask.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.diagnostics.PropertyReportTask.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.diagnostics.PropertyReportTask.gradle
          match: outputFile
        - name: support.function.task.tasks.diagnostics.PropertyReportTask.gradle
          match: projects
        - include: source.groovy

    - name: plugins.antlr.AntlrTask.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.antlr.AntlrTask.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.antlr.AntlrTask.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: antlrClasspath
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: excludes
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: includes
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: outputDirectory
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: source
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: trace
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: traceLexer
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: traceParser
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: traceTreeWalker
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: exclude
        - name: support.function.task.plugins.antlr.AntlrTask.gradle
          match: include
        - include: source.groovy

    - name: plugins.quality.Checkstyle.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.quality.Checkstyle.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.quality.Checkstyle.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: checkstyleClasspath
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: classpath
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: configFile
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: configProperties
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: excludes
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: ignoreFailures
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: includes
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: reports
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: showViolations
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: source
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: exclude
        - name: support.function.task.plugins.quality.Checkstyle.gradle
          match: include
        - include: source.groovy

    - name: plugins.quality.CodeNarc.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.quality.CodeNarc.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.quality.CodeNarc.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: codenarcClasspath
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: configFile
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: excludes
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: ignoreFailures
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: includes
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: maxPriority1Violations
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: maxPriority2Violations
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: maxPriority3Violations
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: reports
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: source
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: exclude
        - name: support.function.task.plugins.quality.CodeNarc.gradle
          match: include
        - include: source.groovy

    - name: plugins.buildcomparison.gradle.CompareGradleBuilds.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.buildcomparison.gradle.CompareGradleBuilds.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.buildcomparison.gradle.CompareGradleBuilds.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.buildcomparison.gradle.CompareGradleBuilds.gradle
          match: ignoreFailures
        - name: support.function.task.plugins.buildcomparison.gradle.CompareGradleBuilds.gradle
          match: reportDir
        - name: support.function.task.plugins.buildcomparison.gradle.CompareGradleBuilds.gradle
          match: sourceBuild
        - name: support.function.task.plugins.buildcomparison.gradle.CompareGradleBuilds.gradle
          match: targetBuild
        - include: source.groovy

    - name: Copy.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Copy.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.Copy.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.Copy.gradle
          match: caseSensitive
        - name: support.function.task.tasks.Copy.gradle
          match: destinationDir
        - name: support.function.task.tasks.Copy.gradle
          match: dirMode
        - name: support.function.task.tasks.Copy.gradle
          match: duplicatesStrategy
        - name: support.function.task.tasks.Copy.gradle
          match: excludes
        - name: support.function.task.tasks.Copy.gradle
          match: fileMode
        - name: support.function.task.tasks.Copy.gradle
          match: includeEmptyDirs
        - name: support.function.task.tasks.Copy.gradle
          match: includes
        - name: support.function.task.tasks.Copy.gradle
          match: source
        - name: support.function.task.tasks.Copy.gradle
          match: eachFile
        - name: support.function.task.tasks.Copy.gradle
          match: exclude
        - name: support.function.task.tasks.Copy.gradle
          match: expand
        - name: support.function.task.tasks.Copy.gradle
          match: filesMatching
        - name: support.function.task.tasks.Copy.gradle
          match: filesNotMatching
        - name: support.function.task.tasks.Copy.gradle
          match: filter
        - name: support.function.task.tasks.Copy.gradle
          match: from
        - name: support.function.task.tasks.Copy.gradle
          match: include
        - name: support.function.task.tasks.Copy.gradle
          match: into
        - name: support.function.task.tasks.Copy.gradle
          match: rename
        - name: support.function.task.tasks.Copy.gradle
          match: with
        - include: source.groovy

    - name: application.CreateStartScripts.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: application.CreateStartScripts.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.application.CreateStartScripts.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.application.CreateStartScripts.gradle
          match: applicationName
        - name: support.function.task.tasks.application.CreateStartScripts.gradle
          match: classpath
        - name: support.function.task.tasks.application.CreateStartScripts.gradle
          match: defaultJvmOpts
        - name: support.function.task.tasks.application.CreateStartScripts.gradle
          match: mainClassName
        - name: support.function.task.tasks.application.CreateStartScripts.gradle
          match: optsEnvironmentVar
        - name: support.function.task.tasks.application.CreateStartScripts.gradle
          match: outputDir
        - include: source.groovy

    - name: Delete.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Delete.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.Delete.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.Delete.gradle
          match: delete
        - name: support.function.task.tasks.Delete.gradle
          match: targetFiles
        - include: source.groovy

    - name: Directory.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Directory.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.Directory.body.source.gradle'
      patterns:
        - include: source.groovy

    - name: Exec.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Exec.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.Exec.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.Exec.gradle
          match: args
        - name: support.function.task.tasks.Exec.gradle
          match: commandLine
        - name: support.function.task.tasks.Exec.gradle
          match: environment
        - name: support.function.task.tasks.Exec.gradle
          match: errorOutput
        - name: support.function.task.tasks.Exec.gradle
          match: execResult
        - name: support.function.task.tasks.Exec.gradle
          match: executable
        - name: support.function.task.tasks.Exec.gradle
          match: ignoreExitValue
        - name: support.function.task.tasks.Exec.gradle
          match: standardInput
        - name: support.function.task.tasks.Exec.gradle
          match: standardOutput
        - name: support.function.task.tasks.Exec.gradle
          match: workingDir
        - include: source.groovy

    - name: plugins.quality.FindBugs.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.quality.FindBugs.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.quality.FindBugs.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: classes
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: classpath
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: effort
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: excludeFilter
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: excludes
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: findbugsClasspath
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: ignoreFailures
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: includeFilter
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: includes
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: maxHeapSize
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: omitVisitors
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: pluginClasspath
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: reportLevel
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: reports
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: source
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: visitors
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: exclude
        - name: support.function.task.plugins.quality.FindBugs.gradle
          match: include
        - include: source.groovy

    - name: publish.ivy.GenerateIvyDescriptor.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.ivy.GenerateIvyDescriptor.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.ivy.tasks.GenerateIvyDescriptor.body.source.gradle'
      patterns:
        - name: support.function.task.publish.ivy.tasks.GenerateIvyDescriptor.gradle
          match: descriptor
        - name: support.function.task.publish.ivy.tasks.GenerateIvyDescriptor.gradle
          match: destination
        - include: source.groovy

    - name: publish.maven.GenerateMavenPom.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.maven.GenerateMavenPom.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.maven.tasks.GenerateMavenPom.body.source.gradle'
      patterns:
        - name: support.function.task.publish.maven.tasks.GenerateMavenPom.gradle
          match: destination
        - name: support.function.task.publish.maven.tasks.GenerateMavenPom.gradle
          match: pom
        - include: source.groovy

    - name: reporting.GenerateBuildDashboard.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: reporting.GenerateBuildDashboard.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'reporting.GenerateBuildDashboard.body.source.gradle'
      patterns:
        - name: support.function.task.reporting.GenerateBuildDashboard.gradle
          match: reports
        - name: support.function.task.reporting.GenerateBuildDashboard.gradle
          match: aggregate
        - include: source.groovy

    - name: GradleBuild.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: GradleBuild.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.GradleBuild.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.GradleBuild.gradle
          match: buildFile
        - name: support.function.task.tasks.GradleBuild.gradle
          match: dir
        - name: support.function.task.tasks.GradleBuild.gradle
          match: startParameter
        - name: support.function.task.tasks.GradleBuild.gradle
          match: tasks
        - include: source.groovy

    - name: compile.GroovyCompile.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: compile.GroovyCompile.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.compile.GroovyCompile.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: classpath
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: destinationDir
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: excludes
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: groovyClasspath
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: groovyOptions
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: includes
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: options
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: source
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: sourceCompatibility
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: targetCompatibility
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: exclude
        - name: support.function.task.tasks.compile.GroovyCompile.gradle
          match: include
        - include: source.groovy

    - name: javadoc.Groovydoc.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: javadoc.Groovydoc.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.javadoc.Groovydoc.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: classpath
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: destinationDir
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: docTitle
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: excludes
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: footer
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: groovyClasspath
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: header
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: includePrivate
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: includes
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: links
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: overview
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: source
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: use
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: windowTitle
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: exclude
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: include
        - name: support.function.task.tasks.javadoc.Groovydoc.gradle
          match: link
        - include: source.groovy

    - name: reporting.dependencies.HtmlDependencyReportTask.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: reporting.dependencies.HtmlDependencyReportTask.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'reporting.dependencies.HtmlDependencyReportTask.body.source.gradle'
      patterns:
        - name: support.function.task.reporting.dependencies.HtmlDependencyReportTask.gradle
          match: projects
        - name: support.function.task.reporting.dependencies.HtmlDependencyReportTask.gradle
          match: reports
        - include: source.groovy

    - name: bundling.Jar.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: bundling.Jar.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.bundling.Jar.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: appendix
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: archiveName
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: archivePath
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: baseName
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: caseSensitive
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: classifier
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: destinationDir
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: dirMode
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: duplicatesStrategy
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: entryCompression
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: excludes
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: extension
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: fileMode
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: includeEmptyDirs
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: includes
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: manifest
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: source
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: version
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: eachFile
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: exclude
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: expand
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: filesMatching
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: filesNotMatching
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: filter
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: from
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: include
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: into
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: metaInf
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: rename
        - name: support.function.task.tasks.bundling.Jar.gradle
          match: with
        - include: source.groovy

    - name: compile.JavaCompile.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: compile.JavaCompile.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.compile.JavaCompile.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: classpath
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: destinationDir
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: excludes
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: includes
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: options
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: source
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: sourceCompatibility
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: targetCompatibility
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: exclude
        - name: support.function.task.tasks.compile.JavaCompile.gradle
          match: include
        - include: source.groovy

    - name: javadoc.Javadoc.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: javadoc.Javadoc.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.javadoc.Javadoc.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: classpath
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: destinationDir
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: excludes
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: executable
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: failOnError
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: includes
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: maxMemory
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: options
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: source
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: title
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: exclude
        - name: support.function.task.tasks.javadoc.Javadoc.gradle
          match: include
        - include: source.groovy

    - name: JavaExec.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: JavaExec.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.JavaExec.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.JavaExec.gradle
          match: allJvmArgs
        - name: support.function.task.tasks.JavaExec.gradle
          match: args
        - name: support.function.task.tasks.JavaExec.gradle
          match: bootstrapClasspath
        - name: support.function.task.tasks.JavaExec.gradle
          match: classpath
        - name: support.function.task.tasks.JavaExec.gradle
          match: commandLine
        - name: support.function.task.tasks.JavaExec.gradle
          match: debug
        - name: support.function.task.tasks.JavaExec.gradle
          match: enableAssertions
        - name: support.function.task.tasks.JavaExec.gradle
          match: environment
        - name: support.function.task.tasks.JavaExec.gradle
          match: errorOutput
        - name: support.function.task.tasks.JavaExec.gradle
          match: executable
        - name: support.function.task.tasks.JavaExec.gradle
          match: ignoreExitValue
        - name: support.function.task.tasks.JavaExec.gradle
          match: jvmArgs
        - name: support.function.task.tasks.JavaExec.gradle
          match: main
        - name: support.function.task.tasks.JavaExec.gradle
          match: maxHeapSize
        - name: support.function.task.tasks.JavaExec.gradle
          match: standardInput
        - name: support.function.task.tasks.JavaExec.gradle
          match: standardOutput
        - name: support.function.task.tasks.JavaExec.gradle
          match: systemProperties
        - name: support.function.task.tasks.JavaExec.gradle
          match: workingDir
        - name: support.function.task.tasks.JavaExec.gradle
          match: copyTo
        - include: source.groovy

    - name: plugins.quality.JDepend.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.quality.JDepend.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.quality.JDepend.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.quality.JDepend.gradle
          match: classesDir
        - name: support.function.task.plugins.quality.JDepend.gradle
          match: jdependClasspath
        - name: support.function.task.plugins.quality.JDepend.gradle
          match: reports
        - include: source.groovy

    - name: plugins.jetty.JettyRun.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.jetty.JettyRun.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.jetty.JettyRun.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: additionalRuntimeJars
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: classpath
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: contextPath
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: daemon
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: httpPort
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: jettyConfig
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: reload
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: scanIntervalSeconds
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: stopKey
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: stopPort
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: webAppSourceDirectory
        - name: support.function.task.plugins.jetty.JettyRun.gradle
          match: webXml
        - include: source.groovy

    - name: plugins.jetty.JettyRunWar.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.jetty.JettyRunWar.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.jetty.JettyRunWar.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: additionalRuntimeJars
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: contextPath
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: daemon
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: httpPort
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: jettyConfig
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: reload
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: scanIntervalSeconds
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: stopKey
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: stopPort
        - name: support.function.task.plugins.jetty.JettyRunWar.gradle
          match: webApp
        - include: source.groovy

    - name: plugins.jetty.JettyStop.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.jetty.JettyStop.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.jetty.JettyStop.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.jetty.JettyStop.gradle
          match: stopKey
        - name: support.function.task.plugins.jetty.JettyStop.gradle
          match: stopPort
        - include: source.groovy

    - name: plugins.quality.Pmd.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.quality.Pmd.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.quality.Pmd.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: excludes
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: ignoreFailures
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: includes
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: pmdClasspath
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: reports
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: ruleSetFiles
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: ruleSets
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: source
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: targetJdk
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: exclude
        - name: support.function.task.plugins.quality.Pmd.gradle
          match: include
        - include: source.groovy

    - name: publish.ivy.PublishToIvyRepository.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.ivy.PublishToIvyRepository.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.ivy.tasks.PublishToIvyRepository.body.source.gradle'
      patterns:
        - name: support.function.task.publish.ivy.tasks.PublishToIvyRepository.gradle
          match: publication
        - name: support.function.task.publish.ivy.tasks.PublishToIvyRepository.gradle
          match: repository
        - include: source.groovy

    - name: publish.maven.PublishToMavenRepository.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: publish.maven.PublishToMavenRepository.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'publish.maven.tasks.PublishToMavenRepository.body.source.gradle'
      patterns:
        - name: support.function.task.publish.maven.tasks.PublishToMavenRepository.gradle
          match: publication
        - name: support.function.task.publish.maven.tasks.PublishToMavenRepository.gradle
          match: repository
        - include: source.groovy

    - name: scala.ScalaCompile.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: scala.ScalaCompile.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.scala.ScalaCompile.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: classpath
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: destinationDir
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: excludes
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: includes
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: options
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: scalaClasspath
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: scalaCompileOptions
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: source
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: sourceCompatibility
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: targetCompatibility
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: exclude
        - name: support.function.task.tasks.scala.ScalaCompile.gradle
          match: include
        - include: source.groovy

    - name: scala.ScalaDoc.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: scala.ScalaDoc.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.scala.ScalaDoc.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: classpath
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: destinationDir
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: excludes
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: includes
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: scalaClasspath
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: scalaDocOptions
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: source
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: title
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: exclude
        - name: support.function.task.tasks.scala.ScalaDoc.gradle
          match: include
        - include: source.groovy

    - name: plugins.sonar.SonarAnalyze.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: plugins.sonar.SonarAnalyze.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'plugins.sonar.SonarAnalyze.body.source.gradle'
      patterns:
        - name: support.function.task.plugins.sonar.SonarAnalyze.gradle
          match: rootModel
        - include: source.groovy

    - name: Sync.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Sync.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.Sync.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.Sync.gradle
          match: caseSensitive
        - name: support.function.task.tasks.Sync.gradle
          match: destinationDir
        - name: support.function.task.tasks.Sync.gradle
          match: dirMode
        - name: support.function.task.tasks.Sync.gradle
          match: duplicatesStrategy
        - name: support.function.task.tasks.Sync.gradle
          match: excludes
        - name: support.function.task.tasks.Sync.gradle
          match: fileMode
        - name: support.function.task.tasks.Sync.gradle
          match: includeEmptyDirs
        - name: support.function.task.tasks.Sync.gradle
          match: includes
        - name: support.function.task.tasks.Sync.gradle
          match: source
        - name: support.function.task.tasks.Sync.gradle
          match: eachFile
        - name: support.function.task.tasks.Sync.gradle
          match: exclude
        - name: support.function.task.tasks.Sync.gradle
          match: expand
        - name: support.function.task.tasks.Sync.gradle
          match: filesMatching
        - name: support.function.task.tasks.Sync.gradle
          match: filesNotMatching
        - name: support.function.task.tasks.Sync.gradle
          match: filter
        - name: support.function.task.tasks.Sync.gradle
          match: from
        - name: support.function.task.tasks.Sync.gradle
          match: include
        - name: support.function.task.tasks.Sync.gradle
          match: into
        - name: support.function.task.tasks.Sync.gradle
          match: rename
        - name: support.function.task.tasks.Sync.gradle
          match: with
        - include: source.groovy

    - name: bundling.Tar.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: bundling.Tar.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.bundling.Tar.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: appendix
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: archiveName
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: archivePath
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: baseName
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: caseSensitive
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: classifier
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: compression
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: destinationDir
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: dirMode
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: duplicatesStrategy
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: excludes
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: extension
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: fileMode
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: includeEmptyDirs
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: includes
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: source
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: version
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: eachFile
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: exclude
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: expand
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: filesMatching
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: filesNotMatching
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: filter
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: from
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: include
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: into
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: rename
        - name: support.function.task.tasks.bundling.Tar.gradle
          match: with
        - include: source.groovy

    - name: testing.Test.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: testing.Test.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.testing.Test.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.testing.Test.gradle
          match: allJvmArgs
        - name: support.function.task.tasks.testing.Test.gradle
          match: binResultsDir
        - name: support.function.task.tasks.testing.Test.gradle
          match: bootstrapClasspath
        - name: support.function.task.tasks.testing.Test.gradle
          match: classpath
        - name: support.function.task.tasks.testing.Test.gradle
          match: debug
        - name: support.function.task.tasks.testing.Test.gradle
          match: enableAssertions
        - name: support.function.task.tasks.testing.Test.gradle
          match: environment
        - name: support.function.task.tasks.testing.Test.gradle
          match: excludes
        - name: support.function.task.tasks.testing.Test.gradle
          match: executable
        - name: support.function.task.tasks.testing.Test.gradle
          match: forkEvery
        - name: support.function.task.tasks.testing.Test.gradle
          match: ignoreFailures
        - name: support.function.task.tasks.testing.Test.gradle
          match: includes
        - name: support.function.task.tasks.testing.Test.gradle
          match: jvmArgs
        - name: support.function.task.tasks.testing.Test.gradle
          match: maxHeapSize
        - name: support.function.task.tasks.testing.Test.gradle
          match: maxParallelForks
        - name: support.function.task.tasks.testing.Test.gradle
          match: minHeapSize
        - name: support.function.task.tasks.testing.Test.gradle
          match: options
        - name: support.function.task.tasks.testing.Test.gradle
          match: reports
        - name: support.function.task.tasks.testing.Test.gradle
          match: scanForTestClasses
        - name: support.function.task.tasks.testing.Test.gradle
          match: systemProperties
        - name: support.function.task.tasks.testing.Test.gradle
          match: testClassesDir
        - name: support.function.task.tasks.testing.Test.gradle
          match: testLogging
        - name: support.function.task.tasks.testing.Test.gradle
          match: testReport
        - name: support.function.task.tasks.testing.Test.gradle
          match: testReportDir
        - name: support.function.task.tasks.testing.Test.gradle
          match: testResultsDir
        - name: support.function.task.tasks.testing.Test.gradle
          match: testSrcDirs
        - name: support.function.task.tasks.testing.Test.gradle
          match: workingDir
        - name: support.function.task.tasks.testing.Test.gradle
          match: jacoco
        - name: support.function.task.tasks.testing.Test.gradle
          match: addTestListener
        - name: support.function.task.tasks.testing.Test.gradle
          match: addTestOutputListener
        - name: support.function.task.tasks.testing.Test.gradle
          match: afterSuite
        - name: support.function.task.tasks.testing.Test.gradle
          match: afterTest
        - name: support.function.task.tasks.testing.Test.gradle
          match: beforeSuite
        - name: support.function.task.tasks.testing.Test.gradle
          match: beforeTest
        - name: support.function.task.tasks.testing.Test.gradle
          match: copyTo
        - name: support.function.task.tasks.testing.Test.gradle
          match: exclude
        - name: support.function.task.tasks.testing.Test.gradle
          match: include
        - name: support.function.task.tasks.testing.Test.gradle
          match: onOutput
        - name: support.function.task.tasks.testing.Test.gradle
          match: removeTestListener
        - name: support.function.task.tasks.testing.Test.gradle
          match: removeTestOutputListener
        - name: support.function.task.tasks.testing.Test.gradle
          match: useJUnit
        - name: support.function.task.tasks.testing.Test.gradle
          match: useTestNG
        - include: source.groovy

    - name: testing.TestReport.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: testing.TestReport.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.testing.TestReport.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.testing.TestReport.gradle
          match: destinationDir
        - name: support.function.task.tasks.testing.TestReport.gradle
          match: testResultDirs
        - name: support.function.task.tasks.testing.TestReport.gradle
          match: reportOn
        - include: source.groovy

    - name: Upload.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: Upload.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.Upload.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.Upload.gradle
          match: artifacts
        - name: support.function.task.tasks.Upload.gradle
          match: configuration
        - name: support.function.task.tasks.Upload.gradle
          match: repositories
        - name: support.function.task.tasks.Upload.gradle
          match: uploadDescriptor
        - include: source.groovy

    - name: bundling.War.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: bundling.War.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.bundling.War.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.bundling.War.gradle
          match: appendix
        - name: support.function.task.tasks.bundling.War.gradle
          match: archiveName
        - name: support.function.task.tasks.bundling.War.gradle
          match: archivePath
        - name: support.function.task.tasks.bundling.War.gradle
          match: baseName
        - name: support.function.task.tasks.bundling.War.gradle
          match: caseSensitive
        - name: support.function.task.tasks.bundling.War.gradle
          match: classifier
        - name: support.function.task.tasks.bundling.War.gradle
          match: classpath
        - name: support.function.task.tasks.bundling.War.gradle
          match: destinationDir
        - name: support.function.task.tasks.bundling.War.gradle
          match: dirMode
        - name: support.function.task.tasks.bundling.War.gradle
          match: duplicatesStrategy
        - name: support.function.task.tasks.bundling.War.gradle
          match: entryCompression
        - name: support.function.task.tasks.bundling.War.gradle
          match: excludes
        - name: support.function.task.tasks.bundling.War.gradle
          match: extension
        - name: support.function.task.tasks.bundling.War.gradle
          match: fileMode
        - name: support.function.task.tasks.bundling.War.gradle
          match: includeEmptyDirs
        - name: support.function.task.tasks.bundling.War.gradle
          match: includes
        - name: support.function.task.tasks.bundling.War.gradle
          match: manifest
        - name: support.function.task.tasks.bundling.War.gradle
          match: source
        - name: support.function.task.tasks.bundling.War.gradle
          match: version
        - name: support.function.task.tasks.bundling.War.gradle
          match: webXml
        - name: support.function.task.tasks.bundling.War.gradle
          match: eachFile
        - name: support.function.task.tasks.bundling.War.gradle
          match: exclude
        - name: support.function.task.tasks.bundling.War.gradle
          match: expand
        - name: support.function.task.tasks.bundling.War.gradle
          match: filesMatching
        - name: support.function.task.tasks.bundling.War.gradle
          match: filesNotMatching
        - name: support.function.task.tasks.bundling.War.gradle
          match: filter
        - name: support.function.task.tasks.bundling.War.gradle
          match: from
        - name: support.function.task.tasks.bundling.War.gradle
          match: include
        - name: support.function.task.tasks.bundling.War.gradle
          match: into
        - name: support.function.task.tasks.bundling.War.gradle
          match: metaInf
        - name: support.function.task.tasks.bundling.War.gradle
          match: rename
        - name: support.function.task.tasks.bundling.War.gradle
          match: webInf
        - name: support.function.task.tasks.bundling.War.gradle
          match: with
        - include: source.groovy

    - name: wrapper.Wrapper.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: wrapper.Wrapper.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.wrapper.Wrapper.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: archiveBase
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: archivePath
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: distributionBase
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: distributionPath
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: distributionUrl
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: gradleVersion
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: jarFile
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: propertiesFile
        - name: support.function.task.tasks.wrapper.Wrapper.gradle
          match: scriptFile
        - include: source.groovy

    - name: bundling.Zip.task.source.gradle
      begin: '\s*(task)\s+(\w+)\s*\(.*type: bundling.Zip.*\)\s*{'
      beginCaptures:
        '1': {name: keyword.task.source.gradle}
        '2': {name: entity.name.function}
      end: '}'
      contentName: 'tasks.bundling.Zip.body.source.gradle'
      patterns:
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: appendix
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: archiveName
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: archivePath
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: baseName
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: caseSensitive
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: classifier
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: destinationDir
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: dirMode
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: duplicatesStrategy
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: entryCompression
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: excludes
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: extension
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: fileMode
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: includeEmptyDirs
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: includes
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: source
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: version
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: eachFile
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: exclude
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: expand
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: filesMatching
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: filesNotMatching
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: filter
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: from
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: include
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: into
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: rename
        - name: support.function.task.tasks.bundling.Zip.gradle
          match: with
        - include: source.groovy
...